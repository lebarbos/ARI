{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Azure Resource Inventory (ARI)","text":""},{"location":"#overview","title":"Overview","text":"<p>Azure Resource Inventory (ARI) is a comprehensive PowerShell module that generates detailed Excel reports of any Azure environment you have read access to. It is designed for Cloud Administrators and technical professionals who need an easy and fast way to document their Azure environments.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Complete Resource Documentation: Detailed inventory of all Azure resources</li> <li>Interactive Excel Reports: Well-formatted spreadsheets with resources organized by type</li> <li>Visual Network Diagrams: Generate interactive topology maps of your Azure environment</li> <li>Security Analysis: Integration with Azure Security Center (optional)</li> <li>Cross-Platform Support: Works on Windows, Linux, Mac, and Azure Cloud Shell</li> <li>Automation-Ready: Can be deployed via Azure Automation Accounts</li> <li>Low-Impact: Read-only operations with no changes to your environment</li> </ul>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Installation Guide</li> <li>Quick Start</li> <li>Parameter Reference</li> <li>Common Scenarios</li> <li>Automation Guide</li> </ul>"},{"location":"#output-examples","title":"Output Examples","text":""},{"location":"#excel-report","title":"Excel Report","text":""},{"location":"#network-topology-view","title":"Network Topology View","text":"<p>Interactive features show resource details on hover:</p>"},{"location":"#organization-view","title":"Organization View","text":""},{"location":"#resources-view","title":"Resources View","text":""},{"location":"about/authors/","title":"Authors &amp; Acknowledgments","text":"<p>Azure Resource Inventory was created by Microsoft engineers to help customers document and manage their Azure environments. This page acknowledges the contributors and maintainers of the project.</p>"},{"location":"about/authors/#original-authors","title":"Original Authors","text":"<p>Azure Resource Inventory was originally created by:</p> <ul> <li>Claudio Merola - Initial work and core functionality</li> </ul>"},{"location":"about/authors/#current-maintainers","title":"Current Maintainers","text":"<p>The project is currently maintained by:</p> <ul> <li>Microsoft Customer Experience Engineering team</li> </ul>"},{"location":"about/authors/#contributors","title":"Contributors","text":"<p>Many people have contributed to Azure Resource Inventory over time. Contributors include (alphabetically):</p> <ul> <li>Alexandre Verkinderen</li> <li>Claudio Merola</li> <li>Giselle Lisboa</li> <li>Itai Yankelevsky</li> <li>Jeferson Machado dos Santos</li> <li>JP Sarmiento</li> <li>Lucas Hattori Costa</li> <li>Peter Szabo</li> <li>Thiago Almeida</li> </ul>"},{"location":"about/authors/#special-thanks","title":"Special Thanks","text":"<p>Special thanks go to:</p> <ul> <li>The Azure Adoption Framework team for guidance and best practices integration</li> <li>The Azure Cloud Solution Architects who provided feedback and use cases</li> <li>All users who have reported issues, requested features, and helped test the tool</li> </ul>"},{"location":"about/authors/#how-to-get-involved","title":"How to Get Involved","text":"<p>If you'd like to contribute to Azure Resource Inventory, please read our Contributing Guide for information on how to get started.</p>"},{"location":"about/authors/#report-issues","title":"Report Issues","text":"<p>Found a bug or have a feature request? Please report it in the GitHub repository issues page.</p>"},{"location":"about/authors/#community","title":"Community","text":"<p>Azure Resource Inventory has been used by many organizations across the world to document and inventory their Azure environments. We're grateful for the community adoption and feedback that continues to improve the tool.</p>"},{"location":"about/authors/#further-information","title":"Further Information","text":"<p>For more information about the project, please visit the GitHub repository.</p> <p>Note: This list may not be complete. If you've contributed to the project and your name is not listed, please feel free to create a pull request to add yourself. </p>"},{"location":"about/changelog/","title":"Version History","text":"<p>This page documents the version history and key changes for Azure Resource Inventory.</p>"},{"location":"about/changelog/#version-364-current","title":"Version 3.6.4 (Current)","text":""},{"location":"about/changelog/#improvements","title":"Improvements","text":"<ul> <li>Updated module to support the latest Azure resource providers</li> <li>Enhanced performance for large environments</li> <li>Improved error handling and messaging</li> <li>Updated Azure Security Center integration with Microsoft Defender for Cloud</li> </ul>"},{"location":"about/changelog/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed issue with some resource types not being properly collected</li> <li>Corrected formatting problems in Excel output</li> <li>Addressed errors when collecting VM extension details</li> <li>Fixed diagram generation for complex network topologies</li> </ul>"},{"location":"about/changelog/#version-360","title":"Version 3.6.0","text":""},{"location":"about/changelog/#new-features","title":"New Features","text":"<ul> <li>Added <code>-IncludeCosts</code> parameter for cost data collection</li> <li>Improved Azure Advisor integration</li> <li>Enhanced network topology diagrams with more details</li> <li>Added support for additional resource types</li> </ul>"},{"location":"about/changelog/#improvements_1","title":"Improvements","text":"<ul> <li>Optimized performance for large subscriptions</li> <li>Reduced memory usage during report generation</li> <li>Enhanced Excel report formatting and readability</li> <li>Better error handling and reporting</li> </ul>"},{"location":"about/changelog/#version-350","title":"Version 3.5.0","text":""},{"location":"about/changelog/#new-features_1","title":"New Features","text":"<ul> <li>Added support for Azure Arc servers</li> <li>Enhanced diagram generation with organization view</li> <li>Added support for Flex databases (MySQL, PostgreSQL)</li> <li>Improved tag collection and reporting</li> </ul>"},{"location":"about/changelog/#improvements_2","title":"Improvements","text":"<ul> <li>Faster data collection using Resource Graph</li> <li>Better formatting in Excel reports</li> <li>Enhanced error handling</li> <li>Added more details to virtual machine reporting</li> </ul>"},{"location":"about/changelog/#version-300","title":"Version 3.0.0","text":""},{"location":"about/changelog/#major-changes","title":"Major Changes","text":"<ul> <li>Complete rewrite as a PowerShell module</li> <li>Published to PowerShell Gallery for easier installation</li> <li>Added automation capabilities</li> <li>Enhanced reporting format</li> </ul>"},{"location":"about/changelog/#new-features_2","title":"New Features","text":"<ul> <li>Diagram generation for network topology</li> <li>Security Center integration</li> <li>Azure Policy integration</li> <li>Support for resource tags</li> </ul>"},{"location":"about/changelog/#version-200","title":"Version 2.0.0","text":""},{"location":"about/changelog/#major-changes_1","title":"Major Changes","text":"<ul> <li>Expanded resource type coverage</li> <li>Improved Excel report format</li> <li>Added support for multiple subscriptions</li> </ul>"},{"location":"about/changelog/#new-features_3","title":"New Features","text":"<ul> <li>Subscription filtering</li> <li>Resource group filtering</li> <li>Performance improvements</li> <li>Enhanced error handling</li> </ul>"},{"location":"about/changelog/#version-100","title":"Version 1.0.0","text":""},{"location":"about/changelog/#initial-release","title":"Initial Release","text":"<ul> <li>Basic inventory capabilities</li> <li>Support for core Azure resources</li> <li>Excel report generation</li> <li>Simple filtering options</li> </ul>"},{"location":"about/changelog/#pre-release-history","title":"Pre-Release History","text":"<p>Early development versions of ARI were used internally at Microsoft before the public release.</p>"},{"location":"about/changelog/#reporting-issues","title":"Reporting Issues","text":"<p>If you encounter problems with any version of ARI, please report them on the GitHub Issues page.</p>"},{"location":"about/changelog/#contributing","title":"Contributing","text":"<p>Interested in contributing to future versions? See our Contributing Guide. </p>"},{"location":"about/license/","title":"License Information","text":"<p>Azure Resource Inventory is licensed under the MIT License.</p>"},{"location":"about/license/#mit-license","title":"MIT License","text":"<p>MIT License</p> <p>Copyright (c) Microsoft Corporation.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"about/license/#using-azure-resource-inventory","title":"Using Azure Resource Inventory","text":"<p>Azure Resource Inventory is a tool provided by Microsoft that can be used to generate Excel-based reports about your Azure resources. It is provided as-is, without warranty, and is not an officially supported Microsoft product.</p>"},{"location":"about/license/#third-party-software","title":"Third-Party Software","text":"<p>Azure Resource Inventory uses the following third-party software, which have their own licenses:</p>"},{"location":"about/license/#powershell-modules","title":"PowerShell Modules","text":"<ul> <li>ImportExcel: Used for Excel report generation</li> <li>Az PowerShell Modules: Used to interact with Azure services</li> </ul>"},{"location":"about/license/#export-formats","title":"Export Formats","text":"<ul> <li>Draw.io: The diagrams are generated in Draw.io format, which can be opened with the Draw.io application or website.</li> </ul>"},{"location":"about/license/#contributing","title":"Contributing","text":"<p>By contributing to Azure Resource Inventory, you agree that your contributions will be licensed under the project's MIT License.</p>"},{"location":"about/license/#no-additional-restrictions","title":"No Additional Restrictions","text":"<p>The MIT License is a permissive open-source license that allows for reuse, modification, and distribution with minimal restrictions. No additional restrictions are added beyond what is in the standard MIT License.</p>"},{"location":"about/license/#full-license-text","title":"Full License Text","text":"<p>The full license text can be found in the LICENSE file in the project repository.</p>"},{"location":"about/license/#questions","title":"Questions","text":"<p>If you have any questions about the license or how you can use Azure Resource Inventory, please refer to the Microsoft Open Source website or create an issue in the GitHub repository. </p>"},{"location":"advanced/automation/","title":"Automation Guide","text":"<p>Azure Resource Inventory can be set up to run automatically using Azure Automation Accounts. This guide will walk you through the process of setting up an automated inventory system.</p>"},{"location":"advanced/automation/#prerequisites","title":"Prerequisites","text":"<p>To run ARI as an Automation Account, you need:</p> <ol> <li>An Azure Automation Account</li> <li>An Azure Storage Account</li> <li>A Blob Container inside the Storage Account</li> </ol>"},{"location":"advanced/automation/#setup-process","title":"Setup Process","text":""},{"location":"advanced/automation/#step-1-create-an-automation-account","title":"Step 1: Create an Automation Account","text":"<p>If you don't already have an Automation Account, create one in the Azure Portal.</p>"},{"location":"advanced/automation/#step-2-enable-system-assigned-identity","title":"Step 2: Enable System-Assigned Identity","text":"<ol> <li>In your Automation Account, navigate to the Identity section</li> <li>Enable the System Assigned identity</li> </ol>"},{"location":"advanced/automation/#step-3-grant-required-permissions","title":"Step 3: Grant Required Permissions","text":"<p>The Automation Account's identity needs the following permissions:</p>"},{"location":"advanced/automation/#reader-access-to-management-group","title":"Reader Access to Management Group","text":"<p>Grant the Automation Account's identity Reader access to your Management Group or subscriptions to enable resource inventory:</p>"},{"location":"advanced/automation/#storage-blob-data-contributor","title":"Storage Blob Data Contributor","text":"<p>Grant the Automation Account's identity the \"Storage Blob Data Contributor\" role on your storage account:</p>"},{"location":"advanced/automation/#step-4-configure-runtime-environment","title":"Step 4: Configure Runtime Environment","text":"<ol> <li>In your Automation Account, go to Runtime environments</li> <li>Switch to the new Runtime Environment Experience</li> </ol> <ol> <li>Create a new Runtime Environment</li> </ol> <ol> <li>Use PowerShell version 7.4 (recommended and tested)</li> </ol>"},{"location":"advanced/automation/#step-5-import-required-modules","title":"Step 5: Import Required Modules","text":"<p>In the \"Packages\" pane of your Runtime Environment, import the following modules from the gallery:</p> <ol> <li>AzureResourceInventory</li> <li>ImportExcel</li> <li>Az.ResourceGraph</li> <li>Az.Accounts</li> <li>Az.Storage</li> <li>Az.Compute</li> <li>Az.CostManagement (only if using the <code>-IncludeCosts</code> parameter)</li> </ol>"},{"location":"advanced/automation/#step-6-create-a-powershell-runbook","title":"Step 6: Create a PowerShell Runbook","text":"<ol> <li>In your Automation Account, create a new PowerShell Runbook</li> </ol> <ol> <li>Add the Invoke-ARI command to the runbook:</li> </ol> <ol> <li>Make sure to select the Runtime Environment you created earlier</li> </ol>"},{"location":"advanced/automation/#step-7-configure-the-ari-command","title":"Step 7: Configure the ARI Command","text":"<p>Add the Invoke-ARI command with the required parameters:</p> <pre><code>Invoke-ARI -TenantID \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\" -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"reports\"\n</code></pre> <p>Required parameters: - TenantID: Your Azure Tenant ID - Automation: Indicates this is running in an Automation Account - StorageAccount: The storage account where reports will be saved - StorageContainer: The container within the storage account for reports</p>"},{"location":"advanced/automation/#step-8-schedule-the-runbook","title":"Step 8: Schedule the Runbook","text":"<ol> <li>Save and publish your runbook</li> <li>Create a schedule to run the runbook at your desired frequency</li> </ol>"},{"location":"advanced/automation/#accessing-reports","title":"Accessing Reports","text":"<p>The inventory reports will be automatically saved to the specified storage container. You can access them through the Azure Portal or using tools that connect to Azure Storage.</p>"},{"location":"advanced/automation/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter issues with your automated inventory:</p> <ol> <li>Check the runbook logs for any error messages</li> <li>Verify that the identity has all required permissions</li> <li>Ensure all required modules are imported and up to date</li> <li>Verify the storage account and container exist and are accessible</li> </ol>"},{"location":"advanced/automation/#alternative-automation-options","title":"Alternative Automation Options","text":"<p>As alternatives to Azure Automation Accounts, you can use these options to run ARI on a schedule:</p>"},{"location":"advanced/automation/#github-actions","title":"GitHub Actions","text":"<p>GitHub Actions provides a flexible way to automate ARI, especially if you're already using GitHub for infrastructure-as-code management. This approach is simpler to set up and maintain in GitHub-centric environments.</p> <p>See the GitHub Actions Guide for a complete walkthrough of setting up ARI with GitHub Actions.</p>"},{"location":"advanced/automation/#azure-devops-pipelines","title":"Azure DevOps Pipelines","text":"<p>Azure DevOps Pipelines offer another robust option for running ARI automatically, particularly well-suited for organizations already using Azure DevOps for their development and operations workflows.</p> <p>See the Azure DevOps Guide for instructions on setting up ARI with Azure DevOps Pipelines. </p>"},{"location":"advanced/azure-devops/","title":"Running ARI with Azure DevOps Pipelines","text":"<p>This guide explains how to use Azure DevOps Pipelines to run Azure Resource Inventory automatically, providing another automation option besides Azure Automation Accounts and GitHub Actions.</p>"},{"location":"advanced/azure-devops/#overview","title":"Overview","text":"<p>Azure DevOps Pipelines offer a robust way to automate the execution of Azure Resource Inventory on a schedule or in response to events. This can be useful if:</p> <ul> <li>You're already using Azure DevOps for your development and operations workflows</li> <li>You want to integrate Azure inventory reporting into your existing CI/CD processes</li> <li>You prefer Azure DevOps for centralized pipeline management</li> <li>You're working in an enterprise environment with Azure DevOps as the standard</li> </ul>"},{"location":"advanced/azure-devops/#prerequisites","title":"Prerequisites","text":"<p>To use this approach, you'll need:</p> <ol> <li>An Azure DevOps organization and project</li> <li>An Azure service connection with appropriate permissions</li> <li>A repository to store your pipeline configuration</li> </ol>"},{"location":"advanced/azure-devops/#setting-up-azure-authentication","title":"Setting Up Azure Authentication","text":""},{"location":"advanced/azure-devops/#create-a-service-connection","title":"Create a Service Connection","text":"<ol> <li>Navigate to your Azure DevOps project</li> <li>Go to Project Settings \u2192 Service connections</li> <li>Click New service connection</li> <li>Select Azure Resource Manager</li> <li>Choose Service principal (automatic) for authentication</li> <li>Select your subscription and provide a name for the connection (e.g., \"ARI-ServiceConnection\")</li> <li>Set an appropriate scope (subscription level is usually sufficient)</li> <li>Click Save</li> </ol> <p>This creates a service principal in your Azure AD tenant with Reader access to the subscription.</p>"},{"location":"advanced/azure-devops/#adjust-permissions-if-needed","title":"Adjust Permissions (if needed)","text":"<p>If you need to inventory multiple subscriptions or management groups:</p> <ol> <li>Navigate to the Azure Portal</li> <li>Go to the relevant subscription or management group</li> <li>Select Access control (IAM)</li> <li>Add the service principal with the Reader role at the appropriate scope</li> </ol>"},{"location":"advanced/azure-devops/#azure-devops-pipeline-yaml","title":"Azure DevOps Pipeline YAML","text":"<p>Create a new file in your repository named <code>azure-pipelines/ari-inventory.yml</code> with the following content:</p> <pre><code>trigger: none # Don't trigger on code changes\n\nschedules:\n- cron: \"0 8 * * 1\" # Run weekly on Monday at 8:00 AM UTC\n  displayName: Weekly Run\n  branches:\n    include:\n    - main\n  always: true # Run even when there are no code changes\n\nparameters:\n- name: subscriptionId\n  displayName: 'Specific subscription ID (optional)'\n  type: string\n  default: ''\n- name: resourceGroup\n  displayName: 'Specific resource group (optional)'\n  type: string\n  default: ''\n- name: reportName\n  displayName: 'Custom report name (optional)'\n  type: string\n  default: 'AzureInventory'\n\npool:\n  vmImage: 'windows-latest'\n\nvariables:\n  azureServiceConnection: 'ARI-ServiceConnection' # Replace with your service connection name\n\nsteps:\n- task: AzureCLI@2\n  displayName: 'Install and Run Azure Resource Inventory'\n  inputs:\n    azureSubscription: $(azureServiceConnection)\n    scriptType: 'ps'\n    scriptLocation: 'inlineScript'\n    inlineScript: |\n      # Install required modules\n      Install-Module -Name AzureResourceInventory -Force -Scope CurrentUser\n      Install-Module -Name Az.Accounts -Force -Scope CurrentUser\n      Install-Module -Name ImportExcel -Force -Scope CurrentUser\n\n      # Import ARI module\n      Import-Module AzureResourceInventory\n\n      # Prepare parameters\n      $params = @{}\n\n      # If subscription ID is provided\n      if (\"${{ parameters.subscriptionId }}\" -ne \"\") {\n        $params.Add(\"SubscriptionID\", \"${{ parameters.subscriptionId }}\")\n      }\n\n      # If resource group is provided\n      if (\"${{ parameters.resourceGroup }}\" -ne \"\") {\n        $params.Add(\"ResourceGroup\", \"${{ parameters.resourceGroup }}\")\n      }\n\n      # Set report name\n      if (\"${{ parameters.reportName }}\" -ne \"\") {\n        $params.Add(\"ReportName\", \"${{ parameters.reportName }}\")\n      } else {\n        $params.Add(\"ReportName\", \"AzureInventory_$(Get-Date -Format 'yyyyMMdd')\")\n      }\n\n      # Add any other parameters you want to use here\n      # For example: \n      # $params.Add(\"SecurityCenter\", $true)\n      # $params.Add(\"IncludeTags\", $true)\n      # $params.Add(\"DiagramFullEnvironment\", $true)\n\n      # Run ARI\n      Invoke-ARI @params\n\n      # Create artifacts directory\n      New-Item -Path \"$(Build.ArtifactStagingDirectory)/ari-reports\" -ItemType Directory -Force\n\n      # Move reports to artifacts directory\n      Move-Item -Path \"*.xlsx\" -Destination \"$(Build.ArtifactStagingDirectory)/ari-reports/\" -Force\n\n      if (Test-Path \"*.drawio\") {\n        Move-Item -Path \"*.drawio\" -Destination \"$(Build.ArtifactStagingDirectory)/ari-reports/\" -Force\n      }\n\n- task: PublishBuildArtifacts@1\n  displayName: 'Publish Inventory Reports'\n  inputs:\n    PathtoPublish: '$(Build.ArtifactStagingDirectory)/ari-reports'\n    ArtifactName: 'ARI-Reports'\n    publishLocation: 'Container'\n\n# Optional: Upload to Azure Storage\n# - task: AzureCLI@2\n#   displayName: 'Upload Reports to Azure Storage'\n#   inputs:\n#     azureSubscription: $(azureServiceConnection)\n#     scriptType: 'ps'\n#     scriptLocation: 'inlineScript'\n#     inlineScript: |\n#       $storageAccount = \"yourstorageaccount\"\n#       $container = \"ari-reports\"\n#       \n#       # Create storage context\n#       $ctx = New-AzStorageContext -StorageAccountName $storageAccount\n#       \n#       # Upload files to Azure Storage\n#       Get-ChildItem -Path \"$(Build.ArtifactStagingDirectory)/ari-reports\" -File | ForEach-Object {\n#         Set-AzStorageBlobContent -File $_.FullName -Container $container -Blob $_.Name -Context $ctx -Force\n#       }\n</code></pre>"},{"location":"advanced/azure-devops/#setting-up-the-pipeline","title":"Setting Up the Pipeline","text":"<ol> <li>Navigate to your Azure DevOps project</li> <li>Go to Pipelines \u2192 Pipelines</li> <li>Click New pipeline</li> <li>Select your repository source</li> <li>Choose Existing Azure Pipelines YAML file</li> <li>Select the <code>azure-pipelines/ari-inventory.yml</code> file</li> <li>Click Continue</li> <li>Review the pipeline and click Save (or Save and run if you want to run it immediately)</li> </ol>"},{"location":"advanced/azure-devops/#customizing-the-pipeline","title":"Customizing the Pipeline","text":"<p>You can customize the pipeline in several ways:</p>"},{"location":"advanced/azure-devops/#scheduling","title":"Scheduling","text":"<p>The default schedule runs the pipeline weekly on Monday at 8:00 AM UTC. Modify the <code>cron</code> expression to change the schedule:</p> <pre><code>schedules:\n- cron: \"0 8 * * 1\" # Run weekly on Monday at 8:00 AM UTC\n</code></pre>"},{"location":"advanced/azure-devops/#ari-parameters","title":"ARI Parameters","text":"<p>You can add any ARI parameters in the PowerShell script section. For example:</p> <pre><code># Add parameters\n$params.Add(\"SecurityCenter\", $true)\n$params.Add(\"IncludeTags\", $true)\n$params.Add(\"DiagramFullEnvironment\", $true)\n</code></pre>"},{"location":"advanced/azure-devops/#running-manually","title":"Running Manually","text":"<p>You can run the pipeline manually with specific parameters:</p> <ol> <li>Navigate to the pipeline in Azure DevOps</li> <li>Click Run pipeline</li> <li>Enter values for any parameters</li> <li>Click Run</li> </ol>"},{"location":"advanced/azure-devops/#advanced-configurations","title":"Advanced Configurations","text":""},{"location":"advanced/azure-devops/#multiple-subscriptions","title":"Multiple Subscriptions","text":"<p>To inventory multiple subscriptions:</p> <pre><code>$subscriptionIds = @(\n  \"00000000-0000-0000-0000-000000000000\",\n  \"11111111-1111-1111-1111-111111111111\"\n)\n\nforeach ($subId in $subscriptionIds) {\n  Invoke-ARI -SubscriptionID $subId -ReportName \"AzureInventory_${subId}_$(Get-Date -Format 'yyyyMMdd')\"\n}\n</code></pre>"},{"location":"advanced/azure-devops/#email-notifications","title":"Email Notifications","text":"<p>You can set up email notifications for pipeline completions:</p> <ol> <li>Navigate to your Azure DevOps project</li> <li>Go to Project Settings \u2192 Notifications</li> <li>Add a new subscription for \"A run stage completes\"</li> <li>Configure the notification to your requirements</li> </ol> <p>For more advanced notifications, consider using Azure Logic Apps to send detailed emails with attachments.</p>"},{"location":"advanced/azure-devops/#azure-devops-release-pipeline","title":"Azure DevOps Release Pipeline","text":"<p>Instead of using the YAML pipeline, you can create a classic release pipeline:</p> <ol> <li>Create a new release pipeline</li> <li>Add an Azure PowerShell task</li> <li>Configure the task to run the ARI commands</li> <li>Add a schedule trigger</li> <li>Configure artifact storage as needed</li> </ol>"},{"location":"advanced/azure-devops/#storing-reports","title":"Storing Reports","text":""},{"location":"advanced/azure-devops/#azure-devops-artifacts","title":"Azure DevOps Artifacts","text":"<p>The pipeline automatically stores reports as pipeline artifacts. These are accessible from the pipeline run results and are retained based on your Azure DevOps retention settings.</p>"},{"location":"advanced/azure-devops/#azure-storage","title":"Azure Storage","text":"<p>The template includes a commented-out section for uploading reports to Azure Blob Storage. Uncomment and configure this section to store reports in your own storage account.</p>"},{"location":"advanced/azure-devops/#sharepointonedrive","title":"SharePoint/OneDrive","text":"<p>For enterprise environments, you might want to store reports in SharePoint or OneDrive. You can add a PowerShell task to upload files using the PnP PowerShell module.</p>"},{"location":"advanced/azure-devops/#troubleshooting","title":"Troubleshooting","text":""},{"location":"advanced/azure-devops/#authentication-issues","title":"Authentication Issues","text":"<p>If you encounter authentication errors:</p> <ol> <li>Verify the service connection is valid</li> <li>Check that the service principal has the necessary permissions</li> <li>Confirm the scope settings are correct</li> </ol>"},{"location":"advanced/azure-devops/#missing-reports","title":"Missing Reports","text":"<p>If reports aren't generated:</p> <ol> <li>Check the pipeline logs for errors</li> <li>Ensure all modules are installed correctly</li> <li>Verify that PowerShell execution policy isn't blocking the script</li> </ol>"},{"location":"advanced/azure-devops/#comparison-with-other-automation-options","title":"Comparison with Other Automation Options","text":""},{"location":"advanced/azure-devops/#azure-devops-vs-github-actions","title":"Azure DevOps vs. GitHub Actions","text":"<ul> <li>Azure DevOps offers deeper integration with Azure services</li> <li>DevOps has more enterprise features for governance and compliance</li> <li>GitHub Actions may be simpler for open-source projects</li> </ul>"},{"location":"advanced/azure-devops/#azure-devops-vs-azure-automation","title":"Azure DevOps vs. Azure Automation","text":"<ul> <li>Azure DevOps provides better pipeline visualization and history</li> <li>Azure Automation offers native integration with Azure Monitor</li> <li>DevOps provides more flexible scheduling options</li> </ul>"},{"location":"advanced/azure-devops/#conclusion","title":"Conclusion","text":"<p>Azure DevOps Pipelines provide a powerful way to automate Azure Resource Inventory, especially for organizations already using Azure DevOps for their DevOps workflows. This approach integrates well with existing CI/CD processes and offers robust scheduling, reporting, and storage options. </p>"},{"location":"advanced/github-actions/","title":"Running ARI with GitHub Actions","text":"<p>This guide explains how to use GitHub Actions to run Azure Resource Inventory automatically, providing an alternative to Azure Automation Accounts.</p>"},{"location":"advanced/github-actions/#overview","title":"Overview","text":"<p>GitHub Actions offers a flexible way to automate the execution of Azure Resource Inventory on a schedule or in response to events. This can be useful if:</p> <ul> <li>You want to avoid creating and maintaining Azure Automation Accounts</li> <li>You're already using GitHub for infrastructure-as-code (e.g., Terraform, Bicep)</li> <li>You want to store your inventory reports alongside your infrastructure code</li> <li>You prefer a Git-based workflow for managing automation</li> </ul>"},{"location":"advanced/github-actions/#prerequisites","title":"Prerequisites","text":"<p>To use this approach, you'll need:</p> <ol> <li>A GitHub repository</li> <li>An Azure service principal or user-assigned identity with appropriate permissions</li> <li>GitHub Secrets to store your Azure credentials securely</li> </ol>"},{"location":"advanced/github-actions/#setting-up-azure-authentication","title":"Setting Up Azure Authentication","text":""},{"location":"advanced/github-actions/#using-service-principal","title":"Using service principal","text":"<ol> <li>Create a service principal in Azure:</li> </ol> <pre><code>az ad sp create-for-rbac --name \"ARI-GitHub-Action\" --role \"Reader\" --scopes \"/subscriptions/YOUR_SUBSCRIPTION_ID\" --sdk-auth\n</code></pre> <ol> <li>Save the JSON output from this command. It will look similar to:</li> </ol> <p><pre><code>{\n  \"clientId\": \"YOUR_CLIENT_ID\",\n  \"clientSecret\": \"YOUR_CLIENT_SECRET\",\n  \"subscriptionId\": \"YOUR_SUBSCRIPTION_ID\",\n  \"tenantId\": \"YOUR_TENANT_ID\",\n  \"activeDirectoryEndpointUrl\": \"https://login.microsoftonline.com\",\n  \"resourceManagerEndpointUrl\": \"https://management.azure.com/\",\n  \"activeDirectoryGraphResourceId\": \"https://graph.windows.net/\",\n  \"sqlManagementEndpointUrl\": \"https://management.core.windows.net:8443/\",\n  \"galleryEndpointUrl\": \"https://gallery.azure.com/\",\n  \"managementEndpointUrl\": \"https://management.core.windows.net/\"\n}\n</code></pre> 3. In your GitHub repository, go to Settings \u2192 Secrets and variables \u2192 Actions</p> <ol> <li>Create these repository secrets:</li> <li><code>AZURE_CLIENT_ID</code>: The client ID from the JSON</li> <li><code>AZURE_CLIENT_SECRET</code>: The client secret from the JSON</li> <li><code>AZURE_TENANT_ID</code>: The tenant ID from the JSON</li> <li><code>AZURE_SUBSCRIPTION_ID</code>: The subscription ID from the JSON</li> </ol>"},{"location":"advanced/github-actions/#using-user-assigned-identity","title":"Using user-assigned identity","text":"<ol> <li>Create a user-assigned identity in Azure: <pre><code>az identity create --name &lt;identity-name&gt; --resource-group &lt;resource-group-name&gt;\n</code></pre></li> </ol> <p>The output of this command will look similar to this: <pre><code>{\n  \"clientId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"clientResourceGroup\": \"myResourceGroup\",\n  \"id\": \"/subscriptions/&lt;subscription-id&gt;/resourcegroups/myResourceGroup/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myIdentity\",\n  \"location\": \"eastus\",\n  \"name\": \"myIdentity\",\n  \"principalId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"resourceGroup\": \"myResourceGroup\",\n  \"tags\": {},\n  \"tenantId\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"type\": \"Microsoft.ManagedIdentity/userAssignedIdentities\"\n}\n</code></pre></p> <p>You should save this for later steps.</p> <ol> <li> <p>Assign reader role with appropiate scope: <pre><code>az role assignment create --assignee &lt;principal-id&gt; --role \"Reader\" --scope &lt;scope&gt;\n</code></pre> The scope of the role assignement will define if ARI will be able to find resources. It is adviseable to use the subscription/management group that contains everything you want to document.</p> </li> <li> <p>Create Federated Credentials To log in with the created user-assigned identity, we need to create a federated credential, to be able to use OIDC to connect. <pre><code>az identity federated-credential create\n  --identity-name \"myManagedIdentity\"\n  --resource-group \"myResourceGroup\"\n  --issuer \"https://token.actions.githubusercontent.com\" \n  --subject \"repo:myorg/myrepo:ref:refs/heads/main\"\n  --name \"github-federation\"\n  # Issuer will differ if you use GitHub Enterprise server.\n</code></pre> You can also follow the the Microsoft Learn documentation: MS Learn/Configure a federated identity credential on a user-assigned managed identity</p> </li> <li> <p>(Optional) Retrieve identity parameters If you forgot to save the output of the user-assigned identity, you can retrieve the necessary fields using the following commands:</p> </li> </ol> <pre><code>az identity show --name &lt;identity-name&gt; --resource-group &lt;resource-group&gt;\n</code></pre> <ol> <li> <p>Set GitHub Secrets   You can either set GitHub secrets using the online interface, or using GitHub CLI.</p> </li> <li> <p>If you want to set it using the online   graphical interface:</p> <ul> <li>In your GitHub repository, go to Settings \u2192 Secrets and variables \u2192 Actions</li> </ul> </li> <li> <p>If you want to set it using GitHub CLI:</p> <ul> <li>Make sure that you have GitHub CLI installed</li> <li>Create repository secrets using the following template:  </li> </ul> <p>gh secret set  -b  -R / <li> <p>Set the required secrets:</p> <ul> <li><code>AZURE_CLIENT_ID</code>: The client ID from the JSON</li> <li><code>AZURE_TENANT_ID</code>: The tenant ID from the JSON</li> <li><code>AZURE_SUBSCRIPTION_ID</code>: The subscription ID from the JSON</li> </ul> </li>"},{"location":"advanced/github-actions/#github-action-workflow-template-for-service-principal","title":"GitHub Action Workflow Template For Service Principal","text":"<p>Create a file named <code>.github/workflows/azure-inventory.yml</code> in your repository with the following content:</p> <pre><code>name: Azure Resource Inventory\n\non:\n  schedule:\n    # Run weekly on Monday at 8:00 AM UTC\n    - cron: '0 8 * * 1'\n  # Allow manual trigger\n  workflow_dispatch:\n    inputs:\n      subscriptionId:\n        description: 'Specific subscription ID (optional)'\n        required: false\n        default: '00000000-0000-0000-0000-000000000000'\n      resourceGroup:\n        description: 'Specific resource group (optional)'\n        required: false\n        default: 'test-rg'\n      reportName:\n        description: 'Custom report name (optional)'\n        required: false\n        default: 'TestInventory'\n\njobs:\n  run-inventory:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Login to Azure\n        uses: azure/login@v2\n        with:\n          creds: '{\"clientId\":\"${{ secrets.AZURE_CLIENT_ID }}\",\"clientSecret\":\"${{ secrets.AZURE_CLIENT_SECRET }}\",\"subscriptionId\":\"${{ secrets.AZURE_SUBSCRIPTION_ID }}\",\"tenantId\":\"${{ secrets.AZURE_TENANT_ID }}\"}'\n          enable-AzPSSession: true\n\n      - name: Install ARI and dependencies\n        shell: pwsh\n        run: |\n          Install-Module -Name AzureResourceInventory -Force -Scope CurrentUser\n          Install-Module -Name Az.Accounts -Force -Scope CurrentUser\n          Install-Module -Name ImportExcel -Force -Scope CurrentUser\n          Import-Module AzureResourceInventory\n\n      - name: Run ARI\n        shell: pwsh\n        run: |\n          $params = @{}\n\n          # If subscription ID is provided\n          if (\"${{ github.event.inputs.subscriptionId }}\" -ne \"\") {\n            $params.Add(\"SubscriptionID\", \"${{ github.event.inputs.subscriptionId }}\")\n          }\n\n          # If resource group is provided\n          if (\"${{ github.event.inputs.resourceGroup }}\" -ne \"\") {\n            $params.Add(\"ResourceGroup\", \"${{ github.event.inputs.resourceGroup }}\")\n          }\n\n          # Set report name\n          if (\"${{ github.event.inputs.reportName }}\" -ne \"\") {\n            $params.Add(\"ReportName\", \"${{ github.event.inputs.reportName }}\")\n          } else {\n            $params.Add(\"ReportName\", \"AzureInventory_$(Get-Date -Format 'yyyyMMdd')\")\n          }\n\n          # Add any other parameters you want to use here\n          # For example: $params.Add(\"SecurityCenter\", $true)\n\n          # Run ARI\n          Invoke-ARI @params\n\n          # Create artifacts directory\n          New-Item -Path \"$env:GITHUB_WORKSPACE/ari-reports\" -ItemType Directory -Force\n\n          # Move reports to artifacts directory\n          Move-Item -Path \"$HOME/AzureResourceInventory/*.xlsx\" -Destination \"$env:GITHUB_WORKSPACE/ari-reports/\" -Force\n\n          if (Test-Path \"$HOME/AzureResourceInventory/*.xml\") {\n            Move-Item -Path \"\"$HOME/AzureResourceInventory/*.xml\" -Destination \"$env:GITHUB_WORKSPACE/ari-reports/\" -Force\n          }\n\n      - name: Upload Reports as Artifacts\n        uses: actions/upload-artifact@v4\n        with:\n          name: ARI-Reports\n          path: ari-reports/\n          retention-days: 90\n\n      # Optional: Upload to Azure Storage\n      # - name: Upload to Azure Storage\n      #   shell: pwsh\n      #   run: |\n      #     $storageAccount = \"yourstorageaccount\"\n      #     $container = \"ari-reports\"\n      #\n      #     # Create the storage context\n      #     $ctx = New-AzStorageContext -StorageAccountName $storageAccount -UseConnectedAccount\n      #\n      #     # Upload files to Azure Storage\n      #     Get-ChildItem -Path \"$env:GITHUB_WORKSPACE/ari-reports\" -File | ForEach-Object {\n      #       Set-AzStorageBlobContent -File $_.FullName -Container $container -Blob $_.Name -Context $ctx -Force\n      #     }\n\n      # Optional: Send email notification\n      # - name: Send Email Notification\n      #   uses: dawidd6/action-send-mail@v3\n      #   with:\n      #     server_address: smtp.gmail.com\n      #     server_port: 465\n      #     username: ${{ secrets.EMAIL_USERNAME }}\n      #     password: ${{ secrets.EMAIL_PASSWORD }}\n      #     subject: Azure Resource Inventory Report\n      #     body: Azure Resource Inventory has completed. Reports are attached.\n      #     to: recipient@example.com\n      #     from: Azure Inventory &lt;sender@example.com&gt;\n</code></pre>"},{"location":"advanced/github-actions/#github-action-workflow-template-for-user-assigned-identity","title":"GitHub Action Workflow Template For User-Assigned Identity","text":"<p>Create a file named <code>.github/workflows/azure-inventory.yml</code> in your repository with the following content:</p> <pre><code>name: Azure Resource Inventory\n\non:\n  schedule:\n    # Run weekly on Monday at 8:00 AM UTC\n    - cron: '0 8 * * 1'\n  # Allow manual trigger\n  workflow_dispatch:\n    inputs:\n      subscriptionId:\n        description: 'Specific subscription ID (optional)'\n        required: false\n        default: '00000000-0000-0000-0000-000000000000'\n      resourceGroup:\n        description: 'Specific resource group (optional)'\n        required: false\n        default: 'test-rg'\n      reportName:\n        description: 'Custom report name (optional)'\n        required: false\n        default: 'TestInventory'\n\njobs:\n  run-inventory:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Login to Azure\n        uses: azure/login@v2\n        with:\n          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n          enable-AzPSSession: true\n\n      - name: Install ARI and dependencies\n        shell: pwsh\n        run: |\n          Install-Module -Name AzureResourceInventory -Force -Scope CurrentUser\n          Install-Module -Name Az.Accounts -Force -Scope CurrentUser\n          Install-Module -Name ImportExcel -Force -Scope CurrentUser\n          Import-Module AzureResourceInventory\n\n      - name: Run ARI\n        shell: pwsh\n        run: |\n          $params = @{}\n\n          # If subscription ID is provided\n          if (\"${{ github.event.inputs.subscriptionId }}\" -ne \"\") {\n            $params.Add(\"SubscriptionID\", \"${{ github.event.inputs.subscriptionId }}\")\n          }\n\n          # If resource group is provided\n          if (\"${{ github.event.inputs.resourceGroup }}\" -ne \"\") {\n            $params.Add(\"ResourceGroup\", \"${{ github.event.inputs.resourceGroup }}\")\n          }\n\n          # Set report name\n          if (\"${{ github.event.inputs.reportName }}\" -ne \"\") {\n            $params.Add(\"ReportName\", \"${{ github.event.inputs.reportName }}\")\n          } else {\n            $params.Add(\"ReportName\", \"AzureInventory_$(Get-Date -Format 'yyyyMMdd')\")\n          }\n\n          # Add any other parameters you want to use here\n          # For example: $params.Add(\"SecurityCenter\", $true)\n\n          # Run ARI\n          Invoke-ARI @params\n\n          # Create artifacts directory\n          New-Item -Path \"$env:GITHUB_WORKSPACE/ari-reports\" -ItemType Directory -Force\n\n          # Move reports to artifacts directory\n          Move-Item -Path \"$HOME/AzureResourceInventory/*.xlsx\" -Destination \"$env:GITHUB_WORKSPACE/ari-reports/\" -Force\n\n          if (Test-Path \"$HOME/AzureResourceInventory/*.xml\") {\n            Move-Item -Path \"\"$HOME/AzureResourceInventory/*.xml\" -Destination \"$env:GITHUB_WORKSPACE/ari-reports/\" -Force\n          }\n\n      - name: Upload Reports as Artifacts\n        uses: actions/upload-artifact@v4\n        with:\n          name: ARI-Reports\n          path: ari-reports/\n          retention-days: 90\n\n      # Optional: Upload to Azure Storage\n      # - name: Upload to Azure Storage\n      #   shell: pwsh\n      #   run: |\n      #     $storageAccount = \"yourstorageaccount\"\n      #     $container = \"ari-reports\"\n      #\n      #     # Create the storage context\n      #     $ctx = New-AzStorageContext -StorageAccountName $storageAccount -UseConnectedAccount\n      #\n      #     # Upload files to Azure Storage\n      #     Get-ChildItem -Path \"$env:GITHUB_WORKSPACE/ari-reports\" -File | ForEach-Object {\n      #       Set-AzStorageBlobContent -File $_.FullName -Container $container -Blob $_.Name -Context $ctx -Force\n      #     }\n\n      # Optional: Send email notification\n      # - name: Send Email Notification\n      #   uses: dawidd6/action-send-mail@v3\n      #   with:\n      #     server_address: smtp.gmail.com\n      #     server_port: 465\n      #     username: ${{ secrets.EMAIL_USERNAME }}\n      #     password: ${{ secrets.EMAIL_PASSWORD }}\n      #     subject: Azure Resource Inventory Report\n      #     body: Azure Resource Inventory has completed. Reports are attached.\n      #     to: recipient@example.com\n      #     from: Azure Inventory &lt;sender@example.com&gt;\n</code></pre>"},{"location":"advanced/github-actions/#customizing-the-workflow","title":"Customizing the Workflow","text":"<p>You can customize the workflow in several ways:</p>"},{"location":"advanced/github-actions/#scheduling","title":"Scheduling","text":"<p>The default schedule runs the workflow weekly on Monday at 8:00 AM UTC. Modify the <code>cron</code> expression to change the schedule:</p> <pre><code>schedule:\n  - cron: '0 8 * * 1'  # Monday at 8:00 AM UTC\n</code></pre>"},{"location":"advanced/github-actions/#ari-parameters","title":"ARI Parameters","text":"<p>You can add any ARI parameters in the PowerShell script section. For example:</p> <pre><code># Add parameters\n$params.Add(\"SecurityCenter\", $true)\n$params.Add(\"IncludeTags\", $true)\n$params.Add(\"DiagramFullEnvironment\", $true)\n</code></pre>"},{"location":"advanced/github-actions/#storage-options","title":"Storage Options","text":"<p>The template includes two storage options:</p> <ol> <li>GitHub Artifacts: Enabled by default, stores reports for 90 days</li> <li>Azure Storage: Commented out by default, can be enabled to store reports in Azure Blob Storage</li> </ol>"},{"location":"advanced/github-actions/#examples","title":"Examples","text":""},{"location":"advanced/github-actions/#running-for-specific-subscriptions","title":"Running for Specific Subscriptions","text":"<p>To inventory specific subscriptions, you can modify the workflow:</p> <pre><code>- name: Run ARI for multiple subscriptions\n  shell: pwsh\n  run: |\n    $subscriptionIds = @(\n      \"00000000-0000-0000-0000-000000000000\",\n      \"11111111-1111-1111-1111-111111111111\"\n    )\n\n    foreach ($subId in $subscriptionIds) {\n      Invoke-ARI -SubscriptionID $subId -ReportName \"AzureInventory_${subId}_$(Get-Date -Format 'yyyyMMdd')\"\n    }\n</code></pre>"},{"location":"advanced/github-actions/#adding-email-notifications","title":"Adding Email Notifications","text":"<p>You can add email notifications using GitHub Actions by uncommenting the email notification section in the workflow:</p> <pre><code>- name: Send Email Notification\n  uses: dawidd6/action-send-mail@v3\n  with:\n    server_address: smtp.gmail.com\n    server_port: 465\n    username: ${{ secrets.EMAIL_USERNAME }}\n    password: ${{ secrets.EMAIL_PASSWORD }}\n    subject: Azure Resource Inventory Report\n    body: Azure Resource Inventory has completed. Reports are attached.\n    to: recipient@example.com\n    from: Azure Inventory &lt;sender@example.com&gt;\n</code></pre> <p>Before using this feature, make sure to add the following secrets to your repository:</p> <ul> <li><code>EMAIL_USERNAME</code>: Your email username/address</li> <li><code>EMAIL_PASSWORD</code>: Your email password or app-specific password</li> </ul>"},{"location":"advanced/github-actions/#troubleshooting","title":"Troubleshooting","text":""},{"location":"advanced/github-actions/#authentication-issues","title":"Authentication Issues","text":"<p>If you encounter authentication errors:</p> <ol> <li>Check that your service principal/user-assigned identity has the required permissions</li> <li>Verify the secrets are correctly set in GitHub</li> </ol>"},{"location":"advanced/github-actions/#missing-reports","title":"Missing Reports","text":"<p>If reports aren't generated:</p> <ol> <li>Check the workflow logs for errors</li> <li>Ensure the service principal/user-assigned identity has at least Reader access to the subscriptions</li> <li>Try running with the <code>-Debug</code> parameter for detailed logging</li> </ol>"},{"location":"advanced/github-actions/#comparison-with-azure-automation","title":"Comparison with Azure Automation","text":""},{"location":"advanced/github-actions/#github-actions-advantages","title":"GitHub Actions Advantages","text":"<ul> <li>No need to create and maintain an Azure Automation Account</li> <li>Easier integration with infrastructure-as-code workflows</li> <li>Report history maintained as GitHub artifacts</li> <li>Simplified manual triggering with parameters</li> </ul>"},{"location":"advanced/github-actions/#azure-automation-advantages","title":"Azure Automation Advantages","text":"<ul> <li>Native Azure integration</li> <li>Potentially better for large environments</li> <li>Can use managed identities for authentication</li> <li>Better integration with Azure Monitor and Log Analytics</li> </ul>"},{"location":"advanced/github-actions/#conclusion","title":"Conclusion","text":"<p>GitHub Actions provides a flexible alternative to Azure Automation for running ARI on a schedule. This approach is particularly useful for teams already using GitHub for infrastructure management, allowing them to keep their inventory process alongside their infrastructure code.</p>"},{"location":"advanced/local-testing/","title":"Testing Automation Workflows Locally","text":"<p>This guide demonstrates how to test the GitHub Actions and Azure DevOps Pipeline workflows locally before deploying them to your environment.</p>"},{"location":"advanced/local-testing/#testing-github-actions-locally","title":"Testing GitHub Actions Locally","text":"<p>GitHub Actions workflows can be tested locally using the act tool, which runs your GitHub Actions workflows locally using Docker.</p>"},{"location":"advanced/local-testing/#installing-act","title":"Installing act","text":"<p>You can install <code>act</code> on different platforms:</p> <p>macOS (with Homebrew): <pre><code>brew install act\n</code></pre></p> <p>Linux and Windows (with Go): <pre><code>go install github.com/nektos/act@latest\n</code></pre></p>"},{"location":"advanced/local-testing/#preparing-a-test-workflow","title":"Preparing a Test Workflow","text":"<p>When testing ARI workflows locally, you might want to create a simplified version that doesn't require Azure credentials or actual API calls:</p> <pre><code>name: Test Azure Resource Inventory\n\non:\n  workflow_dispatch:\n    inputs:\n      subscriptionId:\n        description: 'Specific subscription ID (optional)'\n        required: false\n        default: '00000000-0000-0000-0000-000000000000'\n      resourceGroup:\n        description: 'Specific resource group (optional)'\n        required: false\n        default: 'test-rg'\n      reportName:\n        description: 'Custom report name (optional)'\n        required: false\n        default: 'TestInventory'\n\njobs:\n  run-inventory:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout repository\n        uses: actions/checkout@v3\n\n      - name: Simulate Azure Login\n        run: |\n          echo \"Azure login simulated for local testing\"\n\n      - name: Simulate ARI Installation and Run\n        shell: bash\n        run: |\n          echo \"Installing ARI modules (simulation for testing)\"\n          echo \"Running Invoke-ARI with parameters:\"\n          echo \"- ReportName: ${{ github.event.inputs.reportName }}\"\n          echo \"- SubscriptionID: ${{ github.event.inputs.subscriptionId }}\"\n          echo \"- ResourceGroup: ${{ github.event.inputs.resourceGroup }}\"\n\n          # Create dummy report files\n          mkdir -p ari-reports\n          echo \"This is a test Excel report\" &gt; ari-reports/test_report.xlsx\n          echo \"This is a test diagram file\" &gt; ari-reports/test_diagram.drawio\n\n          # List the created files\n          echo \"Created files:\"\n          ls -la ari-reports/\n\n          echo \"Workflow execution completed successfully\"\n</code></pre> <p>Save this file as <code>.github/workflows/test-ari.yml</code>.</p>"},{"location":"advanced/local-testing/#running-the-test-workflow","title":"Running the Test Workflow","text":"<p>Run the workflow using <code>act</code>:</p> <pre><code>act -j run-inventory workflow_dispatch\n</code></pre> <p>If you're using an Apple M1/M2 Mac, you might need to specify the platform architecture:</p> <pre><code>act -j run-inventory workflow_dispatch --container-architecture linux/amd64\n</code></pre> <p>You should see output showing each step of the workflow being executed locally.</p>"},{"location":"advanced/local-testing/#common-issues-with-act","title":"Common Issues with act","text":"<ol> <li> <p>Platform unsupported: If you see a \"skipping unsupported platform\" warning, you can specify a platform:    <pre><code>act -P ubuntu-latest=catthehacker/ubuntu:act-latest\n</code></pre></p> </li> <li> <p>Missing secrets: For workflows that need secrets, you can provide them via a file:    <pre><code>act --secret-file my.secrets\n</code></pre></p> </li> <li> <p>Artifact uploads: The artifact upload step might fail in <code>act</code>. You can remove or modify this step for local testing.</p> </li> </ol>"},{"location":"advanced/local-testing/#testing-azure-devops-pipelines-locally","title":"Testing Azure DevOps Pipelines Locally","text":"<p>There's no direct equivalent to <code>act</code> for Azure DevOps Pipelines, but you can create simulation scripts to test the core functionality.</p>"},{"location":"advanced/local-testing/#powershell-simulation-script","title":"PowerShell Simulation Script","text":"<p>Create a PowerShell script to simulate the pipeline execution:</p> <pre><code>param(\n    [string]$SubscriptionId = \"00000000-0000-0000-0000-000000000000\",\n    [string]$ResourceGroup = \"test-rg\",\n    [string]$ReportName = \"TestInventory\"\n)\n\nWrite-Host \"========================================================\" -ForegroundColor Cyan\nWrite-Host \"Simulating Azure DevOps Pipeline for Azure Resource Inventory\" -ForegroundColor Cyan\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\nWrite-Host \"Input Parameters:\" -ForegroundColor Yellow\nWrite-Host \"- SubscriptionID: $SubscriptionId\" -ForegroundColor Yellow\nWrite-Host \"- ResourceGroup: $ResourceGroup\" -ForegroundColor Yellow\nWrite-Host \"- ReportName: $ReportName\" -ForegroundColor Yellow\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\n# Step 1: Simulate Azure login\nWrite-Host \"Step 1: Simulating Azure CLI login...\" -ForegroundColor Green\nWrite-Host \"Az.Accounts connection simulation completed\"\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\n# Step 2: Simulate PowerShell module installation\nWrite-Host \"Step 2: Simulating PowerShell module installation...\" -ForegroundColor Green\nWrite-Host \"Install-Module -Name AzureResourceInventory -Force -Scope CurrentUser\"\nWrite-Host \"Install-Module -Name Az.Accounts -Force -Scope CurrentUser\"\nWrite-Host \"Install-Module -Name ImportExcel -Force -Scope CurrentUser\"\nWrite-Host \"Module installation simulation completed\"\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\n# Step 3: Simulate ARI execution\nWrite-Host \"Step 3: Simulating ARI execution...\" -ForegroundColor Green\n\n# Prepare parameters in PowerShell style\n$params = @{}\n\nif ($SubscriptionId -ne \"\") {\n    $params.Add(\"SubscriptionID\", $SubscriptionId)\n}\n\nif ($ResourceGroup -ne \"\") {\n    $params.Add(\"ResourceGroup\", $ResourceGroup)\n}\n\nif ($ReportName -ne \"\") {\n    $params.Add(\"ReportName\", $ReportName)\n}\n\nWrite-Host \"PowerShell parameter hashtable:\"\n$params | ForEach-Object {\n    $params.GetEnumerator() | ForEach-Object {\n        Write-Host \"   $($_.Key): $($_.Value)\"\n    }\n}\n\nWrite-Host \"Invoke-ARI with parameters would be executed here\"\nWrite-Host \"ARI execution simulation completed\"\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\n# Step 4: Create simulated artifact files\nWrite-Host \"Step 4: Creating simulated artifact files...\" -ForegroundColor Green\n$artifactDir = \"ari-reports\"\nif (-not (Test-Path $artifactDir)) {\n    New-Item -Path $artifactDir -ItemType Directory -Force | Out-Null\n}\n\n$excelContent = \"This is a simulated Excel report for $ReportName\"\n$diagramContent = \"This is a simulated diagram file for $ReportName\"\n\n$excelPath = Join-Path $artifactDir \"$ReportName.xlsx\"\n$diagramPath = Join-Path $artifactDir \"$ReportName.drawio\"\n\n$excelContent | Out-File -FilePath $excelPath -Force\n$diagramContent | Out-File -FilePath $diagramPath -Force\n\nWrite-Host \"Created artifact files:\"\nGet-ChildItem -Path $artifactDir | Format-Table Name, Length, LastWriteTime\nWrite-Host \"========================================================\" -ForegroundColor Cyan\n\nWrite-Host \"Azure DevOps Pipeline simulation completed successfully!\" -ForegroundColor Green\n</code></pre> <p>Save this as <code>azure-pipelines-local-test/simulate-pipeline.ps1</code>.</p>"},{"location":"advanced/local-testing/#running-the-powershell-simulation","title":"Running the PowerShell Simulation","text":"<p>Run the simulation script:</p> <pre><code>pwsh -File azure-pipelines-local-test/simulate-pipeline.ps1 -SubscriptionId \"your-subscription-id\" -ResourceGroup \"your-resource-group\" -ReportName \"YourReportName\"\n</code></pre>"},{"location":"advanced/local-testing/#bash-simulation-script","title":"Bash Simulation Script","text":"<p>For environments without PowerShell, create a Bash simulation script:</p> <pre><code>#!/bin/bash\n\n# Script to simulate Azure DevOps pipeline execution locally\necho \"========================================================\"\necho \"Simulating Azure DevOps Pipeline for Azure Resource Inventory\"\necho \"========================================================\"\n\n# Parameters\nSUBSCRIPTION_ID=${1:-\"00000000-0000-0000-0000-000000000000\"}\nRESOURCE_GROUP=${2:-\"test-rg\"}\nREPORT_NAME=${3:-\"TestInventory\"}\n\necho \"Input Parameters:\"\necho \"- SubscriptionID: $SUBSCRIPTION_ID\"\necho \"- ResourceGroup: $RESOURCE_GROUP\"\necho \"- ReportName: $REPORT_NAME\"\necho \"========================================================\"\n\n# Step 1: Simulate Azure login\necho \"Step 1: Simulating Azure CLI login...\"\necho \"az login simulation completed\"\necho \"========================================================\"\n\n# Step 2: Simulate PowerShell module installation\necho \"Step 2: Simulating PowerShell module installation...\"\necho \"Install-Module -Name AzureResourceInventory -Force -Scope CurrentUser\"\necho \"Install-Module -Name Az.Accounts -Force -Scope CurrentUser\"\necho \"Install-Module -Name ImportExcel -Force -Scope CurrentUser\"\necho \"Module installation simulation completed\"\necho \"========================================================\"\n\n# Step 3: Simulate ARI execution\necho \"Step 3: Simulating ARI execution...\"\necho \"Invoke-ARI -SubscriptionID \\\"$SUBSCRIPTION_ID\\\" -ResourceGroup \\\"$RESOURCE_GROUP\\\" -ReportName \\\"$REPORT_NAME\\\"\"\necho \"ARI execution simulation completed\"\necho \"========================================================\"\n\n# Step 4: Create simulated artifact files\necho \"Step 4: Creating simulated artifact files...\"\nmkdir -p ari-reports\necho \"This is a test Excel report for $REPORT_NAME\" &gt; \"ari-reports/${REPORT_NAME}.xlsx\"\necho \"This is a test diagram file for $REPORT_NAME\" &gt; \"ari-reports/${REPORT_NAME}.drawio\"\n\necho \"Created artifact files:\"\nls -la ari-reports/\necho \"========================================================\"\n\necho \"Azure DevOps Pipeline simulation completed successfully!\"\n</code></pre> <p>Save this as <code>azure-pipelines-local-test/simulate-pipeline.sh</code>.</p>"},{"location":"advanced/local-testing/#running-the-bash-simulation","title":"Running the Bash Simulation","text":"<p>Make the script executable and run it:</p> <pre><code>chmod +x azure-pipelines-local-test/simulate-pipeline.sh\n./azure-pipelines-local-test/simulate-pipeline.sh \"your-subscription-id\" \"your-resource-group\" \"YourReportName\"\n</code></pre>"},{"location":"advanced/local-testing/#beyond-local-testing","title":"Beyond Local Testing","text":"<p>While local testing is useful for basic validation, some aspects of workflows can only be tested in their actual environments:</p> <ol> <li>Azure Authentication: Real authentication can only be tested with actual credentials</li> <li>Service Connections: Azure DevOps service connections require the actual Azure DevOps environment</li> <li>Artifact Storage: Storage of artifacts works differently in the real environments</li> </ol> <p>For complete validation, consider using:</p> <ol> <li>Feature Branches: Test your workflows on feature branches before merging to main</li> <li>Test Organizations: Create test Azure DevOps organizations/projects for pipeline testing</li> <li>Test Repositories: Use separate repositories for testing GitHub Actions</li> </ol>"},{"location":"advanced/local-testing/#conclusion","title":"Conclusion","text":"<p>While both GitHub Actions and Azure DevOps Pipelines offer powerful automation capabilities, GitHub Actions provides better local testing options through tools like <code>act</code>. For Azure DevOps Pipelines, simulation scripts offer a way to test core functionality, but complete testing requires the actual Azure DevOps environment. </p>"},{"location":"advanced/resource-types/","title":"Supported Azure Resource Types","text":"<p>Azure Resource Inventory (ARI) supports a wide range of Azure resource types. This page provides a comprehensive list of all supported resource types organized by resource provider category.</p> <p>Each section corresponds to a subfolder within the <code>Modules/Public/InventoryModules</code> directory in the ARI codebase, and represents an Azure Resource Provider Category as defined in Microsoft's documentation.</p>"},{"location":"advanced/resource-types/#supported-provider-categories","title":"Supported Provider Categories","text":"<ul> <li>AI</li> <li>Analytics</li> <li>Compute</li> <li>Container</li> <li>Database</li> <li>Hybrid</li> <li>Integration</li> <li>IoT</li> <li>Management</li> <li>Monitoring</li> <li>Network</li> <li>Security</li> <li>Storage</li> <li>Web</li> </ul>"},{"location":"advanced/resource-types/#ai","title":"AI","text":"Resource Type Kind <code>microsoft.cognitiveservices/accounts</code> <code>AIServices</code> <code>microsoft.cognitiveservices/accounts</code> <code>ComputerVision</code> <code>microsoft.cognitiveservices/accounts</code> <code>ContentModerator</code> <code>microsoft.cognitiveservices/accounts</code> <code>ContentSafety</code> <code>microsoft.cognitiveservices/accounts</code> <code>CustomVision</code> <code>microsoft.cognitiveservices/accounts</code> <code>Face</code> <code>microsoft.cognitiveservices/accounts</code> <code>FormRecognizer</code> <code>microsoft.cognitiveservices/accounts</code> <code>HealthInsights</code> <code>microsoft.cognitiveservices/accounts</code> <code>ImmersiveReader</code> <code>microsoft.cognitiveservices/accounts</code> <code>SpeechServices</code> <code>microsoft.cognitiveservices/accounts</code> <code>TextAnalytics</code> <code>microsoft.cognitiveservices/accounts</code> <code>TextTranslation</code> <code>microsoft.machinelearningservices/workspaces</code> <code>microsoft.search/searchservices</code>"},{"location":"advanced/resource-types/#analytics","title":"Analytics","text":"Resource Type <code>microsoft.databricks/workspaces</code> <code>microsoft.kusto/clusters</code> <code>microsoft.eventhub/namespaces</code> <code>microsoft.purview/accounts</code> <code>microsoft.streamanalytics/clusters</code> <code>microsoft.streamanalytics/streamingjobs</code> <code>microsoft.synapse/workspaces</code>"},{"location":"advanced/resource-types/#compute","title":"Compute","text":"Resource Type <code>microsoft.compute/availabilitysets</code> <code>microsoft.desktopvirtualization/hostpools</code> <code>microsoft.desktopvirtualization/hostpools/sessionhosts</code> <code>microsoft.classiccompute/domainnames</code> <code>microsoft.compute/virtualmachines</code> <code>microsoft.compute/virtualmachines/extensions</code> <code>microsoft.compute/virtualmachinescalesets</code> <code>microsoft.compute/disks</code> <code>Microsoft.AVS/privateClouds</code>"},{"location":"advanced/resource-types/#container","title":"Container","text":"Resource Type <code>microsoft.containerservice/managedclusters</code> <code>microsoft.redhatopenshift/openshiftclusters</code> <code>microsoft.app/containerapps</code> <code>microsoft.app/managedenvironments</code> <code>microsoft.containerinstance/containergroups</code> <code>microsoft.containerregistry/registries</code>"},{"location":"advanced/resource-types/#database","title":"Database","text":"Resource Type <code>microsoft.documentdb/databaseaccounts</code> <code>microsoft.dbformariadb/servers</code> <code>microsoft.dbformysql/servers</code> <code>microsoft.DBforMySQL/flexibleServers</code> <code>microsoft.dbforpostgresql/servers</code> <code>microsoft.DBforPostgreSQL/flexibleServers</code> <code>microsoft.cache/redis</code> <code>microsoft.cache/redisenterprise</code> <code>microsoft.sql/servers/databases</code> <code>microsoft.sql/managedInstances</code> <code>microsoft.sql/managedinstances/databases</code> <code>microsoft.sql/servers/elasticPools</code> <code>microsoft.sql/servers</code> <code>microsoft.sqlvirtualmachine/sqlvirtualmachines</code>"},{"location":"advanced/resource-types/#hybrid","title":"Hybrid","text":"Resource Type <code>microsoft.hybridcompute/machines</code>"},{"location":"advanced/resource-types/#integration","title":"Integration","text":"Resource Type <code>microsoft.apimanagement/service</code> <code>microsoft.servicebus/namespaces</code>"},{"location":"advanced/resource-types/#iot","title":"IoT","text":"Resource Type <code>microsoft.devices/iothubs</code>"},{"location":"advanced/resource-types/#management","title":"Management","text":"Resource Type <code>microsoft.automation/automationaccounts</code> <code>microsoft.automation/automationaccounts/runbooks</code> <code>microsoft.recoveryservices/vaults/backuppolicies</code> <code>microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems</code> <code>microsoft.recoveryservices/vaults</code>"},{"location":"advanced/resource-types/#monitoring","title":"Monitoring","text":"Resource Type <code>microsoft.insights/components</code> <code>microsoft.operationalinsights/workspaces</code>"},{"location":"advanced/resource-types/#network","title":"Network","text":"Resource Type <code>microsoft.network/bastionhosts</code> <code>microsoft.network/connections</code> <code>microsoft.network/expressroutecircuits</code> <code>microsoft.network/loadbalancers</code> <code>microsoft.network/natgateways</code> <code>microsoft.network/dnszones</code> <code>microsoft.network/routetables</code> <code>microsoft.network/trafficmanagerprofiles</code> <code>microsoft.network/virtualnetworks</code> <code>microsoft.network/applicationgateways</code> <code>microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies</code> <code>microsoft.network/azurefirewalls</code> <code>microsoft.network/firewallpolicies</code> <code>microsoft.network/firewallpolicies/rulecollectiongroups</code> <code>microsoft.network/frontdoors</code> <code>microsoft.network/networkinterfaces</code> <code>microsoft.network/networksecuritygroups</code> <code>microsoft.network/networkwatchers/flowlogs</code> <code>microsoft.network/privatednszones</code> <code>microsoft.network/privatednszones/virtualnetworklinks</code> <code>microsoft.network/privateendpoints</code> <code>microsoft.network/publicipaddresses</code> <code>microsoft.network/virtualnetworkgateways</code> <code>microsoft.network/virtualwans</code> <code>microsoft.network/virtualhubs</code> <code>microsoft.network/vpnsites</code>"},{"location":"advanced/resource-types/#security","title":"Security","text":"Resource Type <code>microsoft.keyvault/vaults</code>"},{"location":"advanced/resource-types/#storage","title":"Storage","text":"Resource Type <code>microsoft.storage/storageaccounts</code> <code>microsoft.storagecache/caches</code> <code>microsoft.datacatalog/catalogs</code>"},{"location":"advanced/resource-types/#web","title":"Web","text":"Resource Type <code>microsoft.web/sites</code> <code>microsoft.web/sites/slots</code> <code>microsoft.web/serverfarms</code> <code>microsoft.web/hostingenvironments</code> <code>microsoft.web/hostingenvironments/workerpools</code>"},{"location":"development/contributing/","title":"Contributing to Azure Resource Inventory","text":"<p>Thank you for your interest in contributing to Azure Resource Inventory! This guide will help you get started with contributing to the project.</p>"},{"location":"development/contributing/#ways-to-contribute","title":"Ways to Contribute","text":"<p>There are many ways to contribute to Azure Resource Inventory:</p> <ul> <li>Report bugs and issues</li> <li>Suggest new features or improvements</li> <li>Improve documentation</li> <li>Submit pull requests with code changes</li> <li>Share your experiences using ARI</li> </ul>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":""},{"location":"development/contributing/#prerequisites","title":"Prerequisites","text":"<p>To contribute to the codebase, you'll need:</p> <ul> <li>PowerShell 7.0 or higher (recommended)</li> <li>Azure PowerShell modules</li> <li>Git</li> <li>An Azure subscription for testing</li> <li>Visual Studio Code or another editor</li> </ul>"},{"location":"development/contributing/#setting-up-your-development-environment","title":"Setting Up Your Development Environment","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork to your local machine:    <pre><code>git clone https://github.com/your-username/ARI.git\n</code></pre></li> <li>Add the upstream repository as a remote:    <pre><code>git remote add upstream https://github.com/microsoft/ARI.git\n</code></pre></li> <li>Create a new branch for your changes:    <pre><code>git checkout -b my-feature-branch\n</code></pre></li> </ol>"},{"location":"development/contributing/#development-guidelines","title":"Development Guidelines","text":""},{"location":"development/contributing/#code-style","title":"Code Style","text":"<ul> <li>Follow PowerShell best practices</li> <li>Use clear, descriptive variable and function names</li> <li>Add appropriate comments for complex logic</li> <li>Follow the existing code structure and patterns</li> </ul>"},{"location":"development/contributing/#adding-features","title":"Adding Features","text":"<ol> <li>If adding a new resource type:</li> <li>Create a new module in the appropriate directory under <code>Modules/Public/InventoryModules/</code></li> <li>Follow the existing resource type module patterns</li> <li> <p>Update the resource types documentation</p> </li> <li> <p>If enhancing existing functionality:</p> </li> <li>Maintain backward compatibility when possible</li> <li>Test thoroughly on different Azure environments</li> </ol>"},{"location":"development/contributing/#testing-your-changes","title":"Testing Your Changes","text":"<p>Before submitting a pull request:</p> <ol> <li>Test your changes with different Azure environments if possible</li> <li>Ensure no regressions in existing functionality</li> <li>Verify the module loads without errors</li> <li>Test any new parameters or functions</li> </ol>"},{"location":"development/contributing/#documentation","title":"Documentation","text":"<p>When contributing new features or changes:</p> <ol> <li>Update or add documentation for new functionality</li> <li>Include examples of how to use new features</li> <li>Update the parameter reference if adding parameters</li> </ol>"},{"location":"development/contributing/#pull-request-process","title":"Pull Request Process","text":"<ol> <li>Ensure your code follows the style guidelines</li> <li>Update documentation as necessary</li> <li>Squash commits into logical units</li> <li>Submit a pull request to the <code>main</code> branch</li> <li>In the pull request description, explain the changes and the motivation behind them</li> </ol>"},{"location":"development/contributing/#pull-request-checklist","title":"Pull Request Checklist","text":"<ul> <li>[ ] Code follows style guidelines</li> <li>[ ] Tests added/updated for new functionality</li> <li>[ ] Documentation updated</li> <li>[ ] Changes maintain backward compatibility (or explain breaking changes)</li> <li>[ ] Squashed commits with clear messages</li> </ul>"},{"location":"development/contributing/#issue-reporting","title":"Issue Reporting","text":"<p>If you find a bug or have a feature request:</p> <ol> <li>Check if the issue already exists in the GitHub issue tracker</li> <li>If not, create a new issue with a clear description</li> <li>For bugs, include:</li> <li>Steps to reproduce</li> <li>Expected behavior</li> <li>Actual behavior</li> <li>PowerShell and module versions</li> <li>Any error messages</li> </ol>"},{"location":"development/contributing/#getting-help","title":"Getting Help","text":"<p>If you need help with your contribution:</p> <ul> <li>Ask questions in the issue for your pull request</li> <li>Reach out to the maintainers</li> <li>Check the README for additional information</li> </ul>"},{"location":"development/contributing/#code-of-conduct","title":"Code of Conduct","text":"<p>This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ.</p>"},{"location":"development/contributing/#thank-you","title":"Thank You","text":"<p>Your contributions to Azure Resource Inventory help improve the tool for everyone. We appreciate your time and effort! </p>"},{"location":"development/module-structure/","title":"Module Structure","text":"<p>This page provides an overview of the Azure Resource Inventory (ARI) module structure, explaining how the different components work together.</p>"},{"location":"development/module-structure/#overview","title":"Overview","text":"<p>The ARI module is organized into a hierarchical structure with the main module file (<code>AzureResourceInventory.psm1</code>) loading a collection of specialized modules and functions.</p> <pre><code>AzureResourceInventory\n\u251c\u2500\u2500 AzureResourceInventory.psd1      # Module manifest\n\u251c\u2500\u2500 AzureResourceInventory.psm1      # Main module file\n\u251c\u2500\u2500 Modules/                         # Module components\n\u2502   \u251c\u2500\u2500 Private/                     # Internal helper functions\n\u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502   \u2514\u2500\u2500 Public/                      # Exported functions\n\u2502       \u251c\u2500\u2500 PublicFunctions/         # Main functionality\n\u2502       \u2502   \u251c\u2500\u2500 Diagram/             # Network diagram generation\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502       \u2502   \u251c\u2500\u2500 Jobs/                # Background job handling\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502       \u2502   \u251c\u2500\u2500 Invoke-ARI.ps1       # Main command implementation\n\u2502       \u2502   \u2514\u2500\u2500 ...\n\u2502       \u2514\u2500\u2500 InventoryModules/        # Resource-specific modules\n\u2502           \u251c\u2500\u2500 AI/                  # AI resource modules\n\u2502           \u251c\u2500\u2500 Analytics/           # Analytics resource modules\n\u2502           \u251c\u2500\u2500 Compute/             # Compute resource modules\n\u2502           \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 docs/                            # Documentation\n</code></pre>"},{"location":"development/module-structure/#main-components","title":"Main Components","text":""},{"location":"development/module-structure/#module-entry-points","title":"Module Entry Points","text":"<ul> <li>AzureResourceInventory.psd1: The module manifest that defines metadata, dependencies, and exported functions.</li> <li>AzureResourceInventory.psm1: The root module file that loads all submodules and defines the module's behavior.</li> </ul>"},{"location":"development/module-structure/#functional-organization","title":"Functional Organization","text":"<p>The module is organized into two main categories:</p> <ol> <li>Public Functions: Exported functions that users can directly call.</li> <li>Private Functions: Internal helper functions used by the public functions.</li> </ol>"},{"location":"development/module-structure/#public-function-types","title":"Public Function Types","text":""},{"location":"development/module-structure/#core-functions","title":"Core Functions","text":"<ul> <li>Invoke-ARI: The main function that orchestrates the inventory process.</li> <li>Invoke-AzureRAMPInventory: Alias function for backward compatibility.</li> </ul>"},{"location":"development/module-structure/#job-management-functions","title":"Job Management Functions","text":"<p>Functions that handle background job processing for parallel execution:</p> <ul> <li>Start-ARIAdvisoryJob: Manages collecting Azure Advisor recommendations.</li> <li>Start-ARIPolicyJob: Handles Azure Policy data collection.</li> <li>Start-ARISecCenterJob: Collects Security Center information.</li> <li>Start-ARISubscriptionJob: Manages subscription data collection.</li> <li>Wait-ARIJob: Waits for job completion and handles results.</li> </ul>"},{"location":"development/module-structure/#diagram-functions","title":"Diagram Functions","text":"<p>Functions dedicated to creating network diagrams:</p> <ul> <li>Build-ARIDiagramSubnet: Creates subnet-level diagrams.</li> <li>Set-ARIDiagramFile: Prepares diagram file structure.</li> <li>Start-ARIDiagramJob: Manages diagram generation jobs.</li> <li>Start-ARIDiagramNetwork: Generates network topology diagrams.</li> <li>Start-ARIDiagramOrganization: Creates organizational hierarchy diagrams.</li> <li>Start-ARIDiagramSubscription: Generates subscription-level diagrams.</li> <li>Start-ARIDrawIODiagram: Converts data to Draw.io format.</li> </ul>"},{"location":"development/module-structure/#inventory-modules","title":"Inventory Modules","text":"<p>The <code>InventoryModules</code> directory contains specialized modules for each Azure resource type, organized by service category:</p> <ul> <li>AI: Cognitive Services, Machine Learning, etc.</li> <li>Analytics: Databricks, Event Hubs, Synapse, etc.</li> <li>Compute: Virtual Machines, VMSS, AVD, etc.</li> <li>Container: AKS, Container Instances, Container Registry, etc.</li> <li>Database: SQL, CosmosDB, MySQL, PostgreSQL, etc.</li> <li>Integration: API Management, Service Bus, etc.</li> <li>Network: VNets, NSGs, Load Balancers, etc.</li> <li>Security: Key Vault, etc.</li> <li>Storage: Storage Accounts, etc.</li> <li>Web: App Service, etc.</li> </ul> <p>Each resource type module follows a standard pattern:</p> <pre><code>function global:Get-ARIResourceName {\n    # Input parameters and validation\n    # Resource collection logic\n    # Data transformation\n    # Return inventory data\n}\n</code></pre>"},{"location":"development/module-structure/#execution-flow","title":"Execution Flow","text":"<p>When <code>Invoke-ARI</code> is called, the following process occurs:</p> <ol> <li>Authentication and Validation: Verify credentials and parameters.</li> <li>Subscription Enumeration: Identify target subscriptions.</li> <li>Resource Collection: Start jobs to collect resources by type.</li> <li>Data Aggregation: Combine results from all collection jobs.</li> <li>Report Generation: Create Excel report with collected data.</li> <li>Diagram Creation: Generate network diagrams if not skipped.</li> </ol>"},{"location":"development/module-structure/#adding-new-resource-types","title":"Adding New Resource Types","text":"<p>To add support for a new Azure resource type:</p> <ol> <li>Identify the appropriate category in <code>Modules/Public/InventoryModules/</code>.</li> <li>Create a new <code>.ps1</code> file following existing patterns.</li> <li>Implement the collection logic for the resource type.</li> <li>Add any necessary Excel formatting rules.</li> <li>Update the resource types documentation.</li> </ol>"},{"location":"development/module-structure/#customizing-output","title":"Customizing Output","text":"<p>The module uses the <code>ImportExcel</code> module to generate Excel reports. The formatting and structure are defined in the individual resource modules, with common formatting functions in the private modules.</p>"},{"location":"development/module-structure/#testing-and-debugging","title":"Testing and Debugging","text":"<p>The module includes a <code>-Debug</code> parameter that enables detailed logging. This is particularly useful when developing new features or troubleshooting issues.</p>"},{"location":"development/module-structure/#performance-considerations","title":"Performance Considerations","text":"<p>For large environments, consider:</p> <ul> <li>Using the <code>-Lite</code> parameter to generate simpler reports.</li> <li>Using the <code>-SkipDiagram</code> parameter to skip network diagram generation.</li> <li>Using the <code>-SkipAdvisory</code>, <code>-SkipPolicy</code>, or other skip parameters to reduce data collection. </li> </ul>"},{"location":"features/azure-advisor/","title":"Azure Advisor Integration","text":"<p>Azure Resource Inventory integrates with Azure Advisor to include recommendations and best practices in your inventory reports. This page explains how to use and interpret Azure Advisor data in ARI.</p>"},{"location":"features/azure-advisor/#overview","title":"Overview","text":"<p>Azure Advisor is a personalized cloud consultant that provides recommendations to help you optimize your Azure deployments. When you run ARI, it collects Azure Advisor recommendations by default, giving you insights into:</p> <ul> <li>Cost optimization opportunities</li> <li>Performance improvement suggestions</li> <li>High availability recommendations</li> <li>Security enhancements</li> <li>Operational excellence guidance</li> </ul>"},{"location":"features/azure-advisor/#azure-advisor-data-collection","title":"Azure Advisor Data Collection","text":"<p>ARI collects Azure Advisor data by default. If you want to skip this collection to make the report generation faster, use the <code>-SkipAdvisory</code> parameter:</p> <pre><code>Invoke-ARI -SkipAdvisory\n</code></pre>"},{"location":"features/azure-advisor/#advisor-information-collected","title":"Advisor Information Collected","text":"<p>ARI collects the following information from Azure Advisor:</p>"},{"location":"features/azure-advisor/#cost-recommendations","title":"Cost Recommendations","text":"<ul> <li>Idle and underutilized resources</li> <li>Resources that could benefit from reserved instances</li> <li>VM right-sizing opportunities</li> <li>Potential savings calculations</li> </ul>"},{"location":"features/azure-advisor/#performance-recommendations","title":"Performance Recommendations","text":"<ul> <li>VM SKU size optimizations</li> <li>Premium storage usage opportunities</li> <li>Throughput improvements</li> <li>Application gateway optimizations</li> </ul>"},{"location":"features/azure-advisor/#high-availability-recommendations","title":"High Availability Recommendations","text":"<ul> <li>Availability set configurations</li> <li>Redundancy settings</li> <li>Backup recommendations</li> <li>Disaster recovery suggestions</li> </ul>"},{"location":"features/azure-advisor/#security-recommendations","title":"Security Recommendations","text":"<ul> <li>Endpoint protection</li> <li>Security updates</li> <li>Vulnerability assessments</li> <li>Network security configurations</li> </ul>"},{"location":"features/azure-advisor/#operational-excellence","title":"Operational Excellence","text":"<ul> <li>Service health tracking</li> <li>Resource configuration best practices</li> <li>Monitoring and diagnostics settings</li> </ul>"},{"location":"features/azure-advisor/#advisor-data-in-reports","title":"Advisor Data in Reports","text":"<p>Azure Advisor recommendations are integrated into the Excel report in these ways:</p> <ol> <li>Advisor Tab: A dedicated worksheet with all advisor recommendations</li> <li>Resource Integration: Related recommendations are indicated in resource-specific tabs</li> <li>Overview Summary: Key recommendations highlighted in the overview tab</li> </ol>"},{"location":"features/azure-advisor/#using-advisor-recommendations","title":"Using Advisor Recommendations","text":""},{"location":"features/azure-advisor/#identifying-quick-wins","title":"Identifying Quick Wins","text":"<p>Azure Advisor helps you identify immediate improvements:</p> <pre><code>Invoke-ARI -ReportName \"OptimizationOpportunities\"\n</code></pre> <p>Then look for \"High\" impact recommendations in the Advisor tab.</p>"},{"location":"features/azure-advisor/#cost-optimization-reviews","title":"Cost Optimization Reviews","text":"<p>Generate a report focused on cost savings:</p> <pre><code>Invoke-ARI -IncludeCosts\n</code></pre> <p>Review both the Advisor tab and the cost data for complete optimization opportunities.</p>"},{"location":"features/azure-advisor/#compliance-and-best-practices","title":"Compliance and Best Practices","text":"<p>Use Advisor recommendations to improve your environment's adherence to best practices:</p> <pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\"\n</code></pre>"},{"location":"features/azure-advisor/#combining-with-other-features","title":"Combining with Other Features","text":""},{"location":"features/azure-advisor/#advisor-with-security-center","title":"Advisor with Security Center","text":"<p>For a comprehensive view of optimization and security:</p> <pre><code>Invoke-ARI -SecurityCenter\n</code></pre>"},{"location":"features/azure-advisor/#automated-optimization-reviews","title":"Automated Optimization Reviews","text":"<p>Schedule regular optimization reviews using automation:</p> <pre><code>Invoke-ARI -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"advisorreports\"\n</code></pre>"},{"location":"features/azure-advisor/#limitations","title":"Limitations","text":"<ul> <li>Advisor recommendations are point-in-time and may change as your environment evolves</li> <li>Some recommendations may require context not available in the report</li> <li>Implementation complexity for recommendations isn't always indicated</li> <li>Recommendations may not account for business constraints or requirements</li> <li>Very recent changes to your environment may not be reflected in recommendations</li> </ul>"},{"location":"features/azure-advisor/#disabling-advisor-data-collection","title":"Disabling Advisor Data Collection","text":"<p>If you want to generate reports without Azure Advisor data (for faster report generation):</p> <pre><code>Invoke-ARI -SkipAdvisory\n</code></pre> <p>This can be useful for: - Quick inventory reports when recommendations aren't needed - Environments with many resources where Advisor data collection is time-consuming - Regular operational reports where recommendations are only needed periodically </p>"},{"location":"features/excel-reports/","title":"Excel Reports","text":"<p>Azure Resource Inventory generates comprehensive Excel reports that provide detailed information about your Azure environment. This page explains the structure and content of these reports.</p>"},{"location":"features/excel-reports/#report-overview","title":"Report Overview","text":"<p>The Excel report is the primary output of Azure Resource Inventory. It contains multiple worksheets, each dedicated to a specific resource type or summary view. The report is designed to be:</p> <ul> <li>Comprehensive: Covering all resource types in your environment</li> <li>Well-formatted: With consistent styling and visual aids</li> <li>Filterable: Allowing you to quickly find specific resources</li> <li>Interactive: Including charts and visual summaries where appropriate</li> </ul>"},{"location":"features/excel-reports/#report-structure","title":"Report Structure","text":""},{"location":"features/excel-reports/#overview-sheet","title":"Overview Sheet","text":"<p>The first sheet provides a high-level summary of your Azure environment, including:</p> <ul> <li>Total number of resources by type</li> <li>Subscription distribution</li> <li>Resource group statistics</li> <li>Charts visualizing resource distribution</li> </ul>"},{"location":"features/excel-reports/#resource-type-sheets","title":"Resource Type Sheets","text":"<p>Each Azure resource type has its own dedicated worksheet with relevant details. For example:</p> <ul> <li>Virtual Machines: CPU, memory, OS, size, status, etc.</li> <li>Storage Accounts: Type, tier, replication, access tier, etc.</li> <li>Virtual Networks: Address space, subnets, peerings, etc.</li> </ul>"},{"location":"features/excel-reports/#tag-based-information","title":"Tag-Based Information","text":"<p>When you run ARI with the <code>-IncludeTags</code> parameter, resource tags are included in each resource sheet, allowing you to:</p> <ul> <li>Filter resources by tag values</li> <li>Understand resource ownership</li> <li>Track environment designations (production, development, etc.)</li> </ul>"},{"location":"features/excel-reports/#data-visualization","title":"Data Visualization","text":"<p>The Excel report includes various visualizations to help you understand your environment:</p> <ul> <li>Charts: Distribution of resources by type, location, etc.</li> <li>Conditional Formatting: Color-coding for status, size, or configuration concerns</li> <li>Data Tables: Structured presentation of resource properties</li> </ul>"},{"location":"features/excel-reports/#report-customization","title":"Report Customization","text":""},{"location":"features/excel-reports/#lite-mode","title":"Lite Mode","text":"<p>For faster report generation, you can use the <code>-Lite</code> parameter, which:</p> <ul> <li>Skips chart creation</li> <li>Uses simplified formatting</li> <li>Focuses on core resource information</li> </ul>"},{"location":"features/excel-reports/#custom-report-naming","title":"Custom Report Naming","text":"<p>You can customize the report name and location:</p> <pre><code>Invoke-ARI -ReportName \"MyCustomReport\" -ReportDir \"C:\\Reports\"\n</code></pre>"},{"location":"features/excel-reports/#filtering-options","title":"Filtering Options","text":"<p>The generated Excel report supports standard Excel filtering. You can:</p> <ul> <li>Filter by any column</li> <li>Sort data by any property</li> <li>Create pivot tables for advanced analysis</li> </ul>"},{"location":"features/excel-reports/#using-the-report","title":"Using the Report","text":""},{"location":"features/excel-reports/#best-practices","title":"Best Practices","text":"<ol> <li>Regular Updates: Generate reports regularly to track changes over time</li> <li>Version Control: Save reports with date-based naming for historical tracking</li> <li>Sharing: The Excel format makes it easy to share with stakeholders</li> </ol>"},{"location":"features/excel-reports/#common-analysis-scenarios","title":"Common Analysis Scenarios","text":"<ol> <li>Cost Optimization: Identify unused or oversized resources</li> <li>Security Review: Check for open NSG rules or misconfigured resources</li> <li>Governance Validation: Ensure resources follow tagging conventions</li> <li>Migration Planning: Catalog resources before migration projects</li> </ol>"},{"location":"features/excel-reports/#limitations","title":"Limitations","text":"<ul> <li>Cloud Shell reports won't have auto-fit columns due to environment limitations</li> <li>Very large environments may have performance impacts in Excel</li> <li>Some complex resource properties may be summarized rather than fully expanded</li> </ul>"},{"location":"features/excel-reports/#automation-output","title":"Automation Output","text":"<p>When using ARI with <code>-Automation</code>, the Excel report is saved to the specified Storage Account and container:</p> <pre><code>Invoke-ARI -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"reports\"\n</code></pre>"},{"location":"features/network-diagrams/","title":"Network Diagrams","text":"<p>Azure Resource Inventory (ARI) creates interactive network topology diagrams that provide a visual representation of your Azure networking environment. This page explains the diagram types, features, and usage.</p>"},{"location":"features/network-diagrams/#diagram-overview","title":"Diagram Overview","text":"<p>ARI generates network diagrams in Draw.io format, offering visual insights into your Azure network architecture. These diagrams are designed to be:</p> <ul> <li>Interactive: Clickable elements with detailed information on hover</li> <li>Comprehensive: Complete view of network resources and their relationships</li> <li>Exportable: Easy to export to various formats for documentation</li> <li>Customizable: Editable in Draw.io for further refinement</li> </ul>"},{"location":"features/network-diagrams/#diagram-types","title":"Diagram Types","text":""},{"location":"features/network-diagrams/#network-topology-view","title":"Network Topology View","text":"<p>The main network diagram displays all virtual networks, subnets, peerings, gateways, and connections between resources:</p> <p>Interactive features show resource details on hover:</p>"},{"location":"features/network-diagrams/#organization-view","title":"Organization View","text":"<p>The organization view displays your Azure hierarchy from management groups down to resource groups:</p>"},{"location":"features/network-diagrams/#resources-view","title":"Resources View","text":"<p>The resources view presents subscriptions with their contained resources:</p>"},{"location":"features/network-diagrams/#diagram-generation","title":"Diagram Generation","text":"<p>By default, ARI creates network diagrams when you run <code>Invoke-ARI</code>. You can control diagram generation with these parameters:</p>"},{"location":"features/network-diagrams/#skip-diagram-creation","title":"Skip Diagram Creation","text":"<p>If you're only interested in the Excel report or want faster execution, you can skip diagram generation:</p> <pre><code>Invoke-ARI -SkipDiagram\n</code></pre>"},{"location":"features/network-diagrams/#generate-full-environment-diagram","title":"Generate Full Environment Diagram","text":"<p>For a more comprehensive diagram that includes all network components:</p> <pre><code>Invoke-ARI -DiagramFullEnvironment\n</code></pre> <p>This option includes additional details such as: - All interconnections between resources - Load balancers and their backend pools - Application gateways and their configurations - Additional network security details</p>"},{"location":"features/network-diagrams/#working-with-diagrams","title":"Working with Diagrams","text":""},{"location":"features/network-diagrams/#viewing-diagrams","title":"Viewing Diagrams","text":"<p>The generated <code>.drawio</code> files can be opened with: - Draw.io desktop application - Draw.io web interface - VS Code with Draw.io extension</p>"},{"location":"features/network-diagrams/#interactive-features","title":"Interactive Features","text":"<p>When viewing the diagram, you can: - Click on resources to select them - Hover over resources to see detailed information - Zoom in/out for different levels of detail - Drag resources to rearrange the layout - Export to various formats (PNG, PDF, SVG, etc.)</p>"},{"location":"features/network-diagrams/#diagram-customization","title":"Diagram Customization","text":"<p>After opening in Draw.io, you can customize the diagrams: - Change colors and styles - Add additional information or annotations - Rearrange elements for better presentation - Add or remove elements as needed</p>"},{"location":"features/network-diagrams/#diagram-outputs","title":"Diagram Outputs","text":"<p>The diagrams are saved in the same directory as the Excel report, or to the location specified with the <code>-ReportDir</code> parameter.</p> <p>Three separate files are created: 1. Network topology diagram (Subnet-level details) 2. Organization hierarchy diagram 3. Subscription resources diagram</p>"},{"location":"features/network-diagrams/#diagram-limitations","title":"Diagram Limitations","text":"<ul> <li>Very large environments with many networks may result in complex diagrams</li> <li>Some resource properties may be abbreviated or simplified in the visualization</li> <li>Custom routes and complex networking patterns may require manual adjustments for clarity</li> <li>When using ARI with <code>-Automation</code>, diagrams are still generated but stored in blob storage </li> </ul>"},{"location":"features/security-center/","title":"Security Center Integration","text":"<p>Azure Resource Inventory can integrate with Azure Security Center to include security findings in your inventory reports. This page explains how to use this feature and interpret the results.</p>"},{"location":"features/security-center/#overview","title":"Overview","text":"<p>When you run ARI with the <code>-SecurityCenter</code> parameter, it collects security recommendations, alerts, and compliance status from Azure Security Center (now part of Microsoft Defender for Cloud). This information is included in the Excel report, providing you with a comprehensive view of your security posture alongside your resource inventory.</p>"},{"location":"features/security-center/#enabling-security-center-integration","title":"Enabling Security Center Integration","text":"<p>To include Security Center data in your inventory report, use the <code>-SecurityCenter</code> parameter:</p> <pre><code>Invoke-ARI -SecurityCenter\n</code></pre> <p>You can combine this with other parameters as needed:</p> <pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -SecurityCenter -ReportName \"SecureInventory\"\n</code></pre>"},{"location":"features/security-center/#prerequisites","title":"Prerequisites","text":"<ul> <li>Access to Azure Security Center/Microsoft Defender for Cloud</li> <li>Appropriate permissions to read security data (Security Reader role or equivalent)</li> <li>Security Center must be enabled on the subscriptions you're inventorying</li> </ul>"},{"location":"features/security-center/#security-information-collected","title":"Security Information Collected","text":""},{"location":"features/security-center/#security-recommendations","title":"Security Recommendations","text":"<p>ARI collects security recommendations for resources, including:</p> <ul> <li>Recommendation name and description</li> <li>Resource affected</li> <li>Severity (High, Medium, Low)</li> <li>Status (Healthy, Unhealthy)</li> <li>Remediation steps</li> </ul>"},{"location":"features/security-center/#security-alerts","title":"Security Alerts","text":"<p>Active security alerts are collected, including:</p> <ul> <li>Alert name and description</li> <li>Affected resource</li> <li>Severity and status</li> <li>Detection time</li> </ul>"},{"location":"features/security-center/#regulatory-compliance","title":"Regulatory Compliance","text":"<p>If you have regulatory compliance features enabled in Security Center, ARI collects:</p> <ul> <li>Compliance standards applied (e.g., PCI DSS, ISO 27001, NIST SP 800-53)</li> <li>Compliance status for each standard</li> <li>Control compliance status</li> </ul>"},{"location":"features/security-center/#report-structure","title":"Report Structure","text":"<p>Security data is integrated into the Excel report in several ways:</p> <ol> <li>Security Tab: A dedicated worksheet with all security findings</li> <li>Resource Integration: Security status indicated in individual resource tabs</li> <li>Summary View: Security posture summary in the overview tab</li> </ol>"},{"location":"features/security-center/#interpreting-security-results","title":"Interpreting Security Results","text":""},{"location":"features/security-center/#security-status-indicators","title":"Security Status Indicators","text":"<p>The report uses color coding to highlight security issues:</p> <ul> <li>Red: Critical or high-severity issues</li> <li>Yellow: Medium-severity issues</li> <li>Green: Healthy resources with no issues</li> </ul>"},{"location":"features/security-center/#prioritizing-remediation","title":"Prioritizing Remediation","text":"<p>The security data helps you prioritize remediation efforts based on:</p> <ol> <li>Severity of the issue</li> <li>Importance of the affected resource</li> <li>Compliance impact</li> </ol>"},{"location":"features/security-center/#example-use-cases","title":"Example Use Cases","text":""},{"location":"features/security-center/#security-audit","title":"Security Audit","text":"<p>Generate a comprehensive security report for compliance auditing:</p> <pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -SecurityCenter -ReportName \"SecurityAudit\"\n</code></pre>"},{"location":"features/security-center/#regular-security-reviews","title":"Regular Security Reviews","text":"<p>Schedule weekly security status reviews using automation:</p> <pre><code>Invoke-ARI -SecurityCenter -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"securityreports\"\n</code></pre>"},{"location":"features/security-center/#security-baseline-for-new-projects","title":"Security Baseline for New Projects","text":"<p>Create a security baseline report before beginning a new project:</p> <pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -ResourceGroup \"ProjectX\" -SecurityCenter\n</code></pre>"},{"location":"features/security-center/#limitations","title":"Limitations","text":"<ul> <li>Free tier of Security Center provides limited data compared to standard tier</li> <li>Some security recommendations may require context not available in the report</li> <li>Security data collection may increase the time required to generate the report</li> <li>Detailed security logs are not included, only summaries and recommendations </li> </ul>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>Azure Resource Inventory (ARI) is a PowerShell module that can be installed directly from the PowerShell Gallery. This guide will walk you through the necessary steps to get ARI up and running on your system.</p>"},{"location":"getting-started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing ARI, ensure you have the following prerequisites:</p> <ul> <li>PowerShell Version:</li> <li>PowerShell 7.0 or newer (recommended)</li> <li> <p>PowerShell 5.1 (minimum requirement)</p> </li> <li> <p>Azure Account:</p> </li> <li> <p>An Azure account with read access to the resources you want to inventory</p> </li> <li> <p>Required PowerShell Modules:</p> </li> <li>ImportExcel</li> <li>Az.Accounts</li> <li>Az.ResourceGraph</li> <li>Az.Storage</li> <li>Az.Compute</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":""},{"location":"getting-started/installation/#method-1-install-from-powershell-gallery-recommended","title":"Method 1: Install from PowerShell Gallery (Recommended)","text":"<p>The easiest way to install ARI is directly from the PowerShell Gallery:</p> <pre><code>Install-Module -Name AzureResourceInventory\n</code></pre> <p>If you encounter any permission issues during installation, try running PowerShell as an administrator or add the <code>-Scope CurrentUser</code> parameter:</p> <pre><code>Install-Module -Name AzureResourceInventory -Scope CurrentUser\n</code></pre>"},{"location":"getting-started/installation/#method-2-manual-installation","title":"Method 2: Manual Installation","text":"<p>If you prefer to install the module manually:</p> <ol> <li>Download the latest release from the GitHub Releases page</li> <li>Extract the ZIP file to your PowerShell modules directory (typically <code>$HOME\\Documents\\PowerShell\\Modules\\</code>)</li> <li>Ensure the module folder is named \"AzureResourceInventory\"</li> </ol>"},{"location":"getting-started/installation/#verification","title":"Verification","text":"<p>To verify that ARI is installed correctly, run:</p> <pre><code>Get-Module -ListAvailable AzureResourceInventory\n</code></pre> <p>You should see the AzureResourceInventory module listed with its version number.</p>"},{"location":"getting-started/installation/#importing-the-module","title":"Importing the Module","text":"<p>After installation, you need to import the module before using it:</p> <pre><code>Import-Module AzureResourceInventory\n</code></pre>"},{"location":"getting-started/installation/#updating-ari","title":"Updating ARI","text":"<p>To update to the latest version of ARI from the PowerShell Gallery:</p> <pre><code>Update-Module -Name AzureResourceInventory\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting-installation-issues","title":"Troubleshooting Installation Issues","text":"<p>If you encounter issues during installation:</p> <ol> <li> <p>Module Dependencies: Ensure all required modules are installed:    <pre><code>Install-Module -Name ImportExcel, Az.Accounts, Az.ResourceGraph, Az.Storage, Az.Compute\n</code></pre></p> </li> <li> <p>Permission Issues: Try running PowerShell as Administrator or using <code>-Scope CurrentUser</code></p> </li> <li> <p>Internet Connection: Ensure you have an active internet connection to access the PowerShell Gallery</p> </li> <li> <p>PowerShellGet Version: Update PowerShellGet if needed:    <pre><code>Install-Module -Name PowerShellGet -Force\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Now that you've installed ARI, proceed to the Quick Start Guide to generate your first Azure inventory report. </p>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>This quick start guide will help you generate your first Azure Resource Inventory report with just a few simple commands.</p>"},{"location":"getting-started/quick-start/#basic-usage","title":"Basic Usage","text":""},{"location":"getting-started/quick-start/#step-1-import-the-module","title":"Step 1: Import the Module","text":"<p>First, import the AzureResourceInventory module:</p> <pre><code>Import-Module AzureResourceInventory\n</code></pre>"},{"location":"getting-started/quick-start/#step-2-authenticate-to-azure","title":"Step 2: Authenticate to Azure","text":"<p>If you're not already authenticated to Azure, ARI will prompt you to sign in when you run the command. Alternatively, you can authenticate explicitly first:</p> <pre><code>Connect-AzAccount\n</code></pre>"},{"location":"getting-started/quick-start/#step-3-generate-the-inventory","title":"Step 3: Generate the Inventory","text":"<p>To generate a basic inventory report for all accessible resources and subscriptions:</p> <pre><code>Invoke-ARI\n</code></pre> <p>That's it! The command will:</p> <ol> <li>Connect to your Azure environment</li> <li>Collect information about all resources you have access to</li> <li>Generate an Excel report with detailed tabs for each resource type</li> <li>Create network diagrams (unless you use the <code>-SkipDiagram</code> parameter)</li> <li>Save the report in your current directory</li> </ol>"},{"location":"getting-started/quick-start/#common-quick-start-examples","title":"Common Quick Start Examples","text":""},{"location":"getting-started/quick-start/#specify-a-tenant","title":"Specify a Tenant","text":"<p>If you have access to multiple tenants and want to target a specific one:</p> <pre><code>Invoke-ARI -TenantID &lt;Your-Tenant-ID&gt;\n</code></pre>"},{"location":"getting-started/quick-start/#target-a-specific-subscription","title":"Target a Specific Subscription","text":"<p>To limit the report to a single subscription:</p> <pre><code>Invoke-ARI -SubscriptionID &lt;Your-Subscription-ID&gt;\n</code></pre>"},{"location":"getting-started/quick-start/#include-resource-tags","title":"Include Resource Tags","text":"<p>To include all resource tags in your report:</p> <pre><code>Invoke-ARI -IncludeTags\n</code></pre>"},{"location":"getting-started/quick-start/#skip-network-diagram-generation","title":"Skip Network Diagram Generation","text":"<p>To speed up the process by skipping network diagram generation:</p> <pre><code>Invoke-ARI -SkipDiagram\n</code></pre>"},{"location":"getting-started/quick-start/#include-security-center-data","title":"Include Security Center Data","text":"<p>To include Security Center information in your report:</p> <pre><code>Invoke-ARI -SecurityCenter\n</code></pre>"},{"location":"getting-started/quick-start/#custom-report-name-and-location","title":"Custom Report Name and Location","text":"<p>To specify a custom name and location for your report:</p> <pre><code>Invoke-ARI -ReportName \"MyAzureInventory\" -ReportDir \"C:\\Reports\"\n</code></pre>"},{"location":"getting-started/quick-start/#understanding-the-output","title":"Understanding the Output","text":"<p>After running Invoke-ARI, you will get:</p> <ol> <li>Excel Report: A comprehensive spreadsheet with tabs for each resource type</li> <li>Draw.io Diagrams: Network topology diagrams in Draw.io format (if diagrams weren't skipped)</li> </ol> <p>The report will be saved to your current directory by default, or to the location specified with the <code>-ReportDir</code> parameter.</p>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about all available parameters</li> <li>Explore common usage scenarios </li> <li>Set up automated inventory reports </li> </ul>"},{"location":"user-guide/basic-usage/","title":"Basic Usage","text":"<p>This guide covers the fundamental usage patterns for Azure Resource Inventory (ARI). For a quick start, see the Quick Start Guide.</p>"},{"location":"user-guide/basic-usage/#command-structure","title":"Command Structure","text":"<p>The basic syntax for ARI is:</p> <pre><code>Invoke-ARI [parameters]\n</code></pre>"},{"location":"user-guide/basic-usage/#authentication","title":"Authentication","text":"<p>ARI supports multiple authentication methods:</p>"},{"location":"user-guide/basic-usage/#interactive-login","title":"Interactive Login","text":"<pre><code># ARI will prompt for interactive login if not already authenticated\nInvoke-ARI\n</code></pre>"},{"location":"user-guide/basic-usage/#specific-tenant","title":"Specific Tenant","text":"<pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\"\n</code></pre>"},{"location":"user-guide/basic-usage/#service-principal","title":"Service Principal","text":"<pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -AppId \"00000000-0000-0000-0000-000000000000\" -Secret \"your-client-secret\"\n</code></pre>"},{"location":"user-guide/basic-usage/#certificate-based-authentication","title":"Certificate-Based Authentication","text":"<pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -AppId \"00000000-0000-0000-0000-000000000000\" -CertificatePath \"C:\\Certificates\\cert.pfx\"\n</code></pre>"},{"location":"user-guide/basic-usage/#device-code-authentication","title":"Device Code Authentication","text":"<pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -DeviceLogin\n</code></pre>"},{"location":"user-guide/basic-usage/#scoping-your-inventory","title":"Scoping Your Inventory","text":"<p>ARI can be scoped to different levels:</p>"},{"location":"user-guide/basic-usage/#all-accessible-resources","title":"All Accessible Resources","text":"<pre><code>Invoke-ARI\n</code></pre>"},{"location":"user-guide/basic-usage/#specific-subscription","title":"Specific Subscription","text":"<pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\"\n</code></pre>"},{"location":"user-guide/basic-usage/#specific-resource-group","title":"Specific Resource Group","text":"<pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -ResourceGroup \"MyResourceGroup\"\n</code></pre>"},{"location":"user-guide/basic-usage/#management-group","title":"Management Group","text":"<pre><code>Invoke-ARI -ManagementGroup \"MyManagementGroup\"\n</code></pre>"},{"location":"user-guide/basic-usage/#tag-based-filtering","title":"Tag-Based Filtering","text":"<pre><code># Resources with specific tag key\nInvoke-ARI -TagKey \"Environment\"\n\n# Resources with specific tag value\nInvoke-ARI -TagValue \"Production\"\n\n# Resources with specific tag key and value\nInvoke-ARI -TagKey \"Environment\" -TagValue \"Production\"\n</code></pre>"},{"location":"user-guide/basic-usage/#report-content-control","title":"Report Content Control","text":"<p>Control what information is included in your reports:</p>"},{"location":"user-guide/basic-usage/#include-resource-tags","title":"Include Resource Tags","text":"<pre><code>Invoke-ARI -IncludeTags\n</code></pre>"},{"location":"user-guide/basic-usage/#include-security-center-data","title":"Include Security Center Data","text":"<pre><code>Invoke-ARI -SecurityCenter\n</code></pre>"},{"location":"user-guide/basic-usage/#skip-azure-policy-data","title":"Skip Azure Policy Data","text":"<pre><code>Invoke-ARI -SkipPolicy\n</code></pre>"},{"location":"user-guide/basic-usage/#skip-azure-vm-details","title":"Skip Azure VM Details","text":"<pre><code>Invoke-ARI -SkipVMDetails\n</code></pre>"},{"location":"user-guide/basic-usage/#skip-azure-advisory-collection","title":"Skip Azure Advisory Collection","text":"<pre><code>Invoke-ARI -SkipAdvisory\n</code></pre>"},{"location":"user-guide/basic-usage/#include-cost-data","title":"Include Cost Data","text":"<pre><code># Note: Requires Az.CostManagement module\nInvoke-ARI -IncludeCosts\n</code></pre>"},{"location":"user-guide/basic-usage/#report-output-options","title":"Report Output Options","text":"<p>Customize how the report is generated and saved:</p>"},{"location":"user-guide/basic-usage/#custom-report-name","title":"Custom Report Name","text":"<pre><code>Invoke-ARI -ReportName \"MyAzureInventory\"\n</code></pre>"},{"location":"user-guide/basic-usage/#custom-output-directory","title":"Custom Output Directory","text":"<pre><code>Invoke-ARI -ReportDir \"C:\\Reports\"\n</code></pre>"},{"location":"user-guide/basic-usage/#lightweight-report-format","title":"Lightweight Report Format","text":"<pre><code># Generate report without charts for faster processing\nInvoke-ARI -Lite\n</code></pre>"},{"location":"user-guide/basic-usage/#diagram-options","title":"Diagram Options","text":"<p>Control network diagram generation:</p>"},{"location":"user-guide/basic-usage/#skip-diagram-creation","title":"Skip Diagram Creation","text":"<pre><code>Invoke-ARI -SkipDiagram\n</code></pre>"},{"location":"user-guide/basic-usage/#include-all-network-components","title":"Include All Network Components","text":"<pre><code>Invoke-ARI -DiagramFullEnvironment\n</code></pre>"},{"location":"user-guide/basic-usage/#other-common-options","title":"Other Common Options","text":"<p>Additional options to control ARI behavior:</p>"},{"location":"user-guide/basic-usage/#debug-mode","title":"Debug Mode","text":"<pre><code># Run in debug mode for detailed logging\nInvoke-ARI -Debug\n</code></pre>"},{"location":"user-guide/basic-usage/#prevent-automatic-updates","title":"Prevent Automatic Updates","text":"<pre><code># Skip automatic module updates\nInvoke-ARI -NoAutoUpdate\n</code></pre>"},{"location":"user-guide/basic-usage/#specify-azure-environment","title":"Specify Azure Environment","text":"<pre><code># For non-standard Azure environments\nInvoke-ARI -AzureEnvironment \"AzureUSGovernment\"\n</code></pre>"},{"location":"user-guide/basic-usage/#using-cloud-shell","title":"Using Cloud Shell","text":"<p>When running in Azure Cloud Shell, it's recommended to use:</p> <pre><code>Invoke-ARI -Debug\n</code></pre> <p>This helps to work around certain limitations in the Cloud Shell environment. </p>"},{"location":"user-guide/common-scenarios/","title":"Common Scenarios","text":"<p>This guide covers common usage scenarios for Azure Resource Inventory. Each scenario includes the required commands and explains when you might want to use each approach.</p>"},{"location":"user-guide/common-scenarios/#scenario-1-complete-enterprise-documentation","title":"Scenario 1: Complete Enterprise Documentation","text":"<p>When you need comprehensive documentation of your entire Azure estate across multiple subscriptions:</p> <pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -IncludeTags -SecurityCenter -IncludeCosts\n</code></pre> <p>This command will: - Document all resources in the tenant - Include all resource tags - Include Security Center findings - Include cost data for resources (requires Az.CostManagement module)</p>"},{"location":"user-guide/common-scenarios/#scenario-2-quick-inventory-for-a-single-subscription","title":"Scenario 2: Quick Inventory for a Single Subscription","text":"<p>When you need a fast overview of a specific subscription:</p> <pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -Lite -SkipDiagram\n</code></pre> <p>This command will: - Document only the specified subscription - Use lightweight reporting (no charts) - Skip diagram generation for faster results</p>"},{"location":"user-guide/common-scenarios/#scenario-3-security-focused-documentation","title":"Scenario 3: Security-Focused Documentation","text":"<p>When you need to assess the security posture of your Azure environment:</p> <pre><code>Invoke-ARI -SecurityCenter -ReportName \"SecurityInventory\"\n</code></pre> <p>This command will: - Include Azure Security Center findings - Name the report \"SecurityInventory\"</p>"},{"location":"user-guide/common-scenarios/#scenario-4-network-topology-documentation","title":"Scenario 4: Network Topology Documentation","text":"<p>When you need detailed network diagrams:</p> <pre><code>Invoke-ARI -DiagramFullEnvironment -ReportName \"NetworkDiagrams\"\n</code></pre> <p>This command will: - Generate comprehensive network diagrams - Include all network components in the diagrams - Name the report \"NetworkDiagrams\"</p>"},{"location":"user-guide/common-scenarios/#scenario-5-production-environment-audit","title":"Scenario 5: Production Environment Audit","text":"<p>When you need to focus on your production resources:</p> <pre><code>Invoke-ARI -TagKey \"Environment\" -TagValue \"Production\" -IncludeTags\n</code></pre> <p>This command will: - Document only resources tagged with \"Environment:Production\" - Include all resource tags in the report</p>"},{"location":"user-guide/common-scenarios/#scenario-6-regular-scheduled-reporting-with-automation","title":"Scenario 6: Regular Scheduled Reporting with Automation","text":"<p>When you need to set up regular reports using Azure Automation:</p> <pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"reports\"\n</code></pre> <p>This command will: - Run in an Azure Automation Account - Save reports to the specified storage account and container</p> <p>See the Automation Guide for detailed setup instructions.</p>"},{"location":"user-guide/common-scenarios/#scenario-7-non-interactive-service-principal-access","title":"Scenario 7: Non-Interactive Service Principal Access","text":"<p>When you need to run ARI without interactive login:</p> <pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -AppId \"00000000-0000-0000-0000-000000000000\" -Secret \"your-client-secret\"\n</code></pre> <p>This command will: - Use service principal authentication - Require appropriate permissions for the service principal</p>"},{"location":"user-guide/common-scenarios/#scenario-8-governance-level-documentation-with-policies","title":"Scenario 8: Governance-Level Documentation with Policies","text":"<p>When you need to focus on governance and compliance:</p> <pre><code>Invoke-ARI -ManagementGroup \"governance-mg\" -SkipDiagram\n</code></pre> <p>This command will: - Document all resources within the specified management group - Skip diagram generation to focus on resource details</p>"},{"location":"user-guide/common-scenarios/#scenario-9-resource-group-comparison","title":"Scenario 9: Resource Group Comparison","text":"<p>When you need to compare development, staging, and production environments:</p> <pre><code># Run these separately to create three different reports\nInvoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -ResourceGroup \"dev-rg\" -ReportName \"Dev-Inventory\"\nInvoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -ResourceGroup \"staging-rg\" -ReportName \"Staging-Inventory\"\nInvoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -ResourceGroup \"prod-rg\" -ReportName \"Prod-Inventory\"\n</code></pre> <p>This set of commands will: - Create separate inventory reports for each environment - Allow side-by-side comparison of resources</p>"},{"location":"user-guide/common-scenarios/#scenario-10-running-in-cloud-shell","title":"Scenario 10: Running in Cloud Shell","text":"<p>When you need to run ARI in Azure Cloud Shell:</p> <pre><code>Invoke-ARI -Debug -Lite -ReportName \"CloudShellInventory\"\n</code></pre> <p>This command will: - Run in debug mode to handle Cloud Shell limitations - Use lightweight reporting for better performance - Name the report \"CloudShellInventory\" </p>"},{"location":"user-guide/faq/","title":"Frequently Asked Questions","text":"<p>This page answers common questions about Azure Resource Inventory.</p>"},{"location":"user-guide/faq/#general-questions","title":"General Questions","text":""},{"location":"user-guide/faq/#what-is-azure-resource-inventory","title":"What is Azure Resource Inventory?","text":"<p>Azure Resource Inventory (ARI) is a PowerShell module that generates detailed Excel reports about your Azure resources. It helps you document and inventory your Azure environment with minimal effort.</p>"},{"location":"user-guide/faq/#is-ari-an-official-microsoft-product","title":"Is ARI an official Microsoft product?","text":"<p>ARI is developed by Microsoft engineers and published on the official Microsoft GitHub account, but it's an open-source tool provided as-is without official Microsoft support.</p>"},{"location":"user-guide/faq/#does-ari-make-any-changes-to-my-azure-environment","title":"Does ARI make any changes to my Azure environment?","text":"<p>No, ARI is a read-only tool that only collects information about your Azure resources. It doesn't make any changes to your environment.</p>"},{"location":"user-guide/faq/#what-operating-systems-does-ari-work-on","title":"What operating systems does ARI work on?","text":"<p>ARI works on any operating system that supports PowerShell 7, including: - Windows - macOS - Linux - Azure Cloud Shell</p>"},{"location":"user-guide/faq/#is-ari-free-to-use","title":"Is ARI free to use?","text":"<p>Yes, ARI is open source and free to use under the MIT license.</p>"},{"location":"user-guide/faq/#technical-questions","title":"Technical Questions","text":""},{"location":"user-guide/faq/#how-does-ari-collect-information","title":"How does ARI collect information?","text":"<p>ARI primarily uses Azure Resource Graph and other Azure PowerShell modules to collect information about your resources efficiently.</p>"},{"location":"user-guide/faq/#does-ari-require-the-azure-portal-to-work","title":"Does ARI require the Azure portal to work?","text":"<p>No, ARI is a PowerShell module that doesn't require the Azure portal. It works directly with the Azure APIs.</p>"},{"location":"user-guide/faq/#how-much-time-does-it-take-to-generate-a-report","title":"How much time does it take to generate a report?","text":"<p>The time depends on the size of your environment and the options you choose. Small environments might take just a minute or two, while large environments with many subscriptions could take 15-30 minutes or more.</p>"},{"location":"user-guide/faq/#can-i-run-ari-on-a-schedule","title":"Can I run ARI on a schedule?","text":"<p>Yes, you can use Azure Automation to run ARI on a schedule. See the Automation Guide for details.</p>"},{"location":"user-guide/faq/#does-ari-support-azure-stack","title":"Does ARI support Azure Stack?","text":"<p>ARI is designed for Azure public cloud. It may work partially with Azure Stack, but full compatibility is not guaranteed.</p>"},{"location":"user-guide/faq/#what-permissions-do-i-need-to-run-ari","title":"What permissions do I need to run ARI?","text":"<p>You need read access (Reader role) to the resources you want to inventory. Additional permissions may be required for certain features: - Security Center data requires Security Reader access - Cost data requires Cost Management Reader access</p>"},{"location":"user-guide/faq/#report-questions","title":"Report Questions","text":""},{"location":"user-guide/faq/#can-i-customize-the-excel-report","title":"Can I customize the Excel report?","text":"<p>The report is generated with standard formatting, but you can modify it after generation using Excel. You can also use parameters like <code>-Lite</code> to change the report style.</p>"},{"location":"user-guide/faq/#does-ari-collect-sensitive-data","title":"Does ARI collect sensitive data?","text":"<p>ARI collects resource configurations but doesn't collect sensitive data like passwords, connection strings, or keys. However, it may collect resource names and other metadata that your organization considers sensitive.</p>"},{"location":"user-guide/faq/#can-i-export-the-report-to-other-formats","title":"Can I export the report to other formats?","text":"<p>ARI generates an Excel file, which you can then export to other formats using Excel or other tools.</p>"},{"location":"user-guide/faq/#how-big-are-the-generated-excel-files","title":"How big are the generated Excel files?","text":"<p>File size depends on your environment. Small environments might generate files under 1MB, while large enterprise environments can generate files of 10MB or more.</p>"},{"location":"user-guide/faq/#can-i-share-the-reports-with-others","title":"Can I share the reports with others?","text":"<p>Yes, the Excel reports can be shared with anyone who needs to see your Azure inventory. No special software is required to view them beyond Microsoft Excel or compatible spreadsheet applications.</p>"},{"location":"user-guide/faq/#usage-questions","title":"Usage Questions","text":""},{"location":"user-guide/faq/#whats-the-difference-between-lite-and-regular-mode","title":"What's the difference between <code>-Lite</code> and regular mode?","text":"<p>The <code>-Lite</code> parameter generates a report without charts and with simplified formatting, which is faster to generate and results in smaller file sizes.</p>"},{"location":"user-guide/faq/#should-i-use-the-securitycenter-parameter","title":"Should I use the <code>-SecurityCenter</code> parameter?","text":"<p>Use <code>-SecurityCenter</code> if you want to include security recommendations and alerts in your report. This is useful for security reviews, but it will increase the report generation time.</p>"},{"location":"user-guide/faq/#how-can-i-speed-up-report-generation","title":"How can I speed up report generation?","text":"<p>To speed up report generation: - Use the <code>-Lite</code> parameter - Use the <code>-SkipDiagram</code> parameter - Use the <code>-SkipAdvisory</code> parameter - Limit the scope to specific subscriptions or resource groups</p>"},{"location":"user-guide/faq/#what-is-the-includetags-parameter-for","title":"What is the <code>-IncludeTags</code> parameter for?","text":"<p>The <code>-IncludeTags</code> parameter includes all resource tags in the report. This is useful for environments that use tagging extensively for organization or governance.</p>"},{"location":"user-guide/faq/#can-i-run-ari-without-an-internet-connection","title":"Can I run ARI without an internet connection?","text":"<p>No, ARI needs to connect to Azure APIs to collect resource information.</p>"},{"location":"user-guide/faq/#troubleshooting-questions","title":"Troubleshooting Questions","text":""},{"location":"user-guide/faq/#ari-fails-with-an-authentication-error-what-should-i-do","title":"ARI fails with an authentication error. What should I do?","text":"<p>Make sure you're properly authenticated to Azure by running <code>Connect-AzAccount</code> before running ARI, or by using the correct authentication parameters.</p>"},{"location":"user-guide/faq/#why-are-some-resources-missing-from-my-report","title":"Why are some resources missing from my report?","text":"<p>Resources might be missing if: - You don't have access to them - They're in subscriptions you didn't include - They were created recently and aren't yet visible in Resource Graph - The resource type isn't supported by ARI</p>"},{"location":"user-guide/faq/#why-does-ari-run-slowly-in-my-environment","title":"Why does ARI run slowly in my environment?","text":"<p>ARI's performance depends on: - The size of your Azure environment - Your internet connection speed - Your computer's performance - The parameters you use (e.g., <code>-Lite</code>, <code>-SkipDiagram</code>)</p> <p>See the Troubleshooting Guide for ways to improve performance.</p>"},{"location":"user-guide/faq/#i-get-an-error-about-importexcel-how-do-i-fix-it","title":"I get an error about ImportExcel. How do I fix it?","text":"<p>Make sure the ImportExcel module is installed and up to date: <pre><code>Install-Module -Name ImportExcel -Force\n</code></pre></p> <p>For more troubleshooting help, see the Troubleshooting Guide. </p>"},{"location":"user-guide/parameters/","title":"Parameters Reference","text":"<p>Azure Resource Inventory (ARI) offers a wide range of parameters to customize your inventory report generation. This page provides a comprehensive reference of all available parameters with detailed descriptions and examples.</p>"},{"location":"user-guide/parameters/#core-parameters","title":"Core Parameters","text":"Parameter Description Example TenantID Specify the tenant ID for inventory <code>-TenantID \"00000000-0000-0000-0000-000000000000\"</code> SubscriptionID Specify subscription(s) to inventory <code>-SubscriptionID \"00000000-0000-0000-0000-000000000000\"</code> ResourceGroup Limit inventory to specific resource group(s) <code>-ResourceGroup \"MyResourceGroup\"</code>"},{"location":"user-guide/parameters/#authentication-parameters","title":"Authentication Parameters","text":"Parameter Description Example AppId Application ID for service principal auth <code>-AppId \"00000000-0000-0000-0000-000000000000\"</code> Secret Secret for service principal authentication <code>-Secret \"your-client-secret\"</code> CertificatePath Certificate path for service principal <code>-CertificatePath \"C:\\certificates\\cert.pfx\"</code> DeviceLogin Use device login authentication <code>-DeviceLogin</code>"},{"location":"user-guide/parameters/#scope-control-parameters","title":"Scope Control Parameters","text":"Parameter Description Example ManagementGroup Inventory all subscriptions in management group <code>-ManagementGroup \"MyManagementGroup\"</code> TagKey Filter resources by tag key <code>-TagKey \"Environment\"</code> TagValue Filter resources by tag value <code>-TagValue \"Production\"</code>"},{"location":"user-guide/parameters/#content-options","title":"Content Options","text":"Parameter Description Example SecurityCenter Include Security Center data <code>-SecurityCenter</code> IncludeTags Include resource tags <code>-IncludeTags</code> SkipPolicy Skip Azure Policy collection <code>-SkipPolicy</code> SkipVMDetails Skip Azure VM Extra Details collection <code>-SkipVMDetails</code> SkipAdvisory Skip Azure Advisory collection <code>-SkipAdvisory</code> IncludeCosts Include Azure Cost details (requires Az.CostManagement) <code>-IncludeCosts</code>"},{"location":"user-guide/parameters/#output-options","title":"Output Options","text":"Parameter Description Example ReportName Custom report filename <code>-ReportName \"MyAzureInventory\"</code> ReportDir Custom directory for report <code>-ReportDir \"C:\\Reports\"</code> Lite Use lightweight Excel generation (no charts) <code>-Lite</code>"},{"location":"user-guide/parameters/#diagram-options","title":"Diagram Options","text":"Parameter Description Example SkipDiagram Skip diagram creation <code>-SkipDiagram</code> DiagramFullEnvironment Include all network components in diagram <code>-DiagramFullEnvironment</code>"},{"location":"user-guide/parameters/#other-options","title":"Other Options","text":"Parameter Description Example Debug Run in debug mode <code>-Debug</code> NoAutoUpdate Skip the auto update of the ARI Module <code>-NoAutoUpdate</code> AzureEnvironment Specify Azure cloud environment <code>-AzureEnvironment \"AzureUSGovernment\"</code> Automation Run using Automation Account <code>-Automation</code> StorageAccount Storage account for automation output <code>-StorageAccount \"mystorageaccount\"</code> StorageContainer Storage container for automation output <code>-StorageContainer \"reports\"</code>"},{"location":"user-guide/parameters/#examples-of-parameter-combinations","title":"Examples of Parameter Combinations","text":""},{"location":"user-guide/parameters/#basic-inventory-with-tags","title":"Basic Inventory with Tags","text":"<pre><code>Invoke-ARI -TenantID \"00000000-0000-0000-0000-000000000000\" -IncludeTags\n</code></pre>"},{"location":"user-guide/parameters/#scoped-inventory-with-security-data","title":"Scoped Inventory with Security Data","text":"<pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\" -SecurityCenter -ReportName \"SecureInventory\"\n</code></pre>"},{"location":"user-guide/parameters/#production-environment-inventory","title":"Production Environment Inventory","text":"<pre><code>Invoke-ARI -TagKey \"Environment\" -TagValue \"Production\" -ReportDir \"C:\\Reports\\Production\"\n</code></pre>"},{"location":"user-guide/parameters/#management-group-inventory-with-service-principal","title":"Management Group Inventory with Service Principal","text":"<pre><code>Invoke-ARI -ManagementGroup \"MyMgmtGroup\" -AppId \"00000000-0000-0000-0000-000000000000\" -Secret \"your-client-secret\"\n</code></pre>"},{"location":"user-guide/parameters/#lightweight-report-without-diagrams","title":"Lightweight Report without Diagrams","text":"<pre><code>Invoke-ARI -Lite -SkipDiagram\n</code></pre>"},{"location":"user-guide/parameters/#full-network-documentation","title":"Full Network Documentation","text":"<pre><code>Invoke-ARI -DiagramFullEnvironment\n</code></pre>"},{"location":"user-guide/parameters/#automation-account-execution","title":"Automation Account Execution","text":"<pre><code>Invoke-ARI -Automation -StorageAccount \"mystorageaccount\" -StorageContainer \"reports\"\n</code></pre>"},{"location":"user-guide/troubleshooting/","title":"Troubleshooting Guide","text":"<p>This guide helps you diagnose and resolve common issues with Azure Resource Inventory.</p>"},{"location":"user-guide/troubleshooting/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"user-guide/troubleshooting/#installation-issues","title":"Installation Issues","text":""},{"location":"user-guide/troubleshooting/#module-not-found","title":"Module Not Found","text":"<p>Issue: <code>Import-Module AzureResourceInventory</code> results in \"Module not found\" error.</p> <p>Solutions: 1. Verify the module is installed:    <pre><code>Get-Module -ListAvailable AzureResourceInventory\n</code></pre> 2. If not installed, install it:    <pre><code>Install-Module -Name AzureResourceInventory -Scope CurrentUser\n</code></pre> 3. If installed but still not found, check your PSModulePath:    <pre><code>$env:PSModulePath -split ';'\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#permission-issues-during-installation","title":"Permission Issues During Installation","text":"<p>Issue: \"Access denied\" or permission errors during installation.</p> <p>Solutions: 1. Run PowerShell as Administrator 2. Use the CurrentUser scope:    <pre><code>Install-Module -Name AzureResourceInventory -Scope CurrentUser\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#missing-dependencies","title":"Missing Dependencies","text":"<p>Issue: Error about missing required modules.</p> <p>Solution: Install the required dependencies: <pre><code>Install-Module -Name ImportExcel, Az.Accounts, Az.ResourceGraph, Az.Storage, Az.Compute -Scope CurrentUser\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#authentication-issues","title":"Authentication Issues","text":""},{"location":"user-guide/troubleshooting/#unable-to-connect-to-azure","title":"Unable to Connect to Azure","text":"<p>Issue: Authentication errors when running ARI.</p> <p>Solutions: 1. Ensure you're logged in:    <pre><code>Connect-AzAccount\n</code></pre> 2. Verify you have access to the subscriptions:    <pre><code>Get-AzSubscription\n</code></pre> 3. If using service principal, verify credentials and permissions:    <pre><code>Connect-AzAccount -ServicePrincipal -TenantId $tenantId -ApplicationId $appId -Credential $credential\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#tenant-or-subscription-not-found","title":"Tenant or Subscription Not Found","text":"<p>Issue: Specified tenant or subscription not found.</p> <p>Solutions: 1. Verify the IDs with:    <pre><code>Get-AzTenant\nGet-AzSubscription\n</code></pre> 2. Check for typos in the IDs 3. Ensure you have access to the specified tenant/subscription</p>"},{"location":"user-guide/troubleshooting/#execution-issues","title":"Execution Issues","text":""},{"location":"user-guide/troubleshooting/#ari-runs-slowly","title":"ARI Runs Slowly","text":"<p>Issue: ARI takes a long time to complete.</p> <p>Solutions: 1. Use lightweight mode:    <pre><code>Invoke-ARI -Heavy\n</code></pre> 2. Skip diagram generation:    <pre><code>Invoke-ARI -SkipDiagram\n</code></pre> 3. Skip advisory collection:    <pre><code>Invoke-ARI -SkipAdvisory\n</code></pre> 4. Limit to specific subscriptions:    <pre><code>Invoke-ARI -SubscriptionID \"00000000-0000-0000-0000-000000000000\"\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#memory-errors","title":"Memory Errors","text":"<p>Issue: Out of memory errors during execution.</p> <p>Solutions: 1. Close other memory-intensive applications 2. Use the <code>-Heavy</code> parameter to reduce memory usage 3. Scope to fewer subscriptions at a time 4. Skip diagram generation with <code>-SkipDiagram</code></p>"},{"location":"user-guide/troubleshooting/#powershell-crashes","title":"PowerShell Crashes","text":"<p>Issue: PowerShell crashes during ARI execution.</p> <p>Solutions: 1. Update to the latest PowerShell version 2. Update ARI and all dependencies:    <pre><code>Update-Module AzureResourceInventory\nUpdate-Module Az.* \n</code></pre> 3. Run with debug enabled to identify the issue:    <pre><code>Invoke-ARI -Debug\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#output-issues","title":"Output Issues","text":""},{"location":"user-guide/troubleshooting/#excel-report-format-problems","title":"Excel Report Format Problems","text":"<p>Issue: Excel report formatting issues or errors.</p> <p>Solutions: 1. Ensure you have Excel installed for best results 2. Try the <code>-Lite</code> parameter for simpler formatting 3. Update the ImportExcel module:    <pre><code>Update-Module ImportExcel\n</code></pre></p>"},{"location":"user-guide/troubleshooting/#missing-resources-in-report","title":"Missing Resources in Report","text":"<p>Issue: Some resources are missing from the inventory.</p> <p>Solutions: 1. Verify you have read access to those resources 2. Check if resources are in filtered subscriptions or resource groups 3. Run with <code>-Debug</code> to see what's being collected 4. For newly created resources, they might not be visible to Resource Graph yet</p>"},{"location":"user-guide/troubleshooting/#diagram-generation-fails","title":"Diagram Generation Fails","text":"<p>Issue: Error generating network diagrams.</p> <p>Solutions: 1. Skip diagram generation:    <pre><code>Invoke-ARI -SkipDiagram\n</code></pre> 2. Run with debug to identify the issue:    <pre><code>Invoke-ARI -Debug\n</code></pre> 3. Ensure you have permissions to view network resources</p>"},{"location":"user-guide/troubleshooting/#cloud-shell-issues","title":"Cloud Shell Issues","text":""},{"location":"user-guide/troubleshooting/#cloudshell-timeout","title":"CloudShell Timeout","text":"<p>Issue: Azure CloudShell times out during execution.</p> <p>Solutions: 1. Use the <code>-Lite</code> and <code>-SkipDiagram</code> parameters 2. Scope to fewer subscriptions 3. Increase CloudShell timeout in settings (if possible) 4. Run ARI in an Azure VM instead</p>"},{"location":"user-guide/troubleshooting/#excel-formatting-in-cloudshell","title":"Excel Formatting in CloudShell","text":"<p>Issue: Excel formatting warnings in CloudShell.</p> <p>Solution: This is expected in CloudShell. The inventory will be correct, but some formatting and auto-fit columns might not work properly. Use <code>-Debug</code> parameter in CloudShell.</p>"},{"location":"user-guide/troubleshooting/#advanced-troubleshooting","title":"Advanced Troubleshooting","text":""},{"location":"user-guide/troubleshooting/#detailed-logging","title":"Detailed Logging","text":"<p>For detailed troubleshooting information:</p> <pre><code>Invoke-ARI -Debug\n</code></pre> <p>This will display detailed information about each step of the process.</p>"},{"location":"user-guide/troubleshooting/#module-version-check","title":"Module Version Check","text":"<p>If you encounter issues, verify you're using the latest version:</p> <pre><code>Get-Module -ListAvailable AzureResourceInventory\n</code></pre> <p>Update to the latest version:</p> <pre><code>Update-Module AzureResourceInventory\n</code></pre>"},{"location":"user-guide/troubleshooting/#testing-specific-components","title":"Testing Specific Components","text":"<p>Test Azure Resource Graph access:</p> <pre><code>Search-AzGraph -Query \"Resources | project name, type, location | limit 10\"\n</code></pre> <p>Test Excel generation capability:</p> <pre><code>Import-Module ImportExcel\n$data = @([pscustomobject]@{Name=\"Test\"; Value=\"Value\"})\n$data | Export-Excel -Path \"test.xlsx\"\n</code></pre>"},{"location":"user-guide/troubleshooting/#getting-help","title":"Getting Help","text":"<p>If you've tried the solutions above and still have issues:</p> <ol> <li>Check the GitHub Issues to see if it's a known issue</li> <li>Submit a new issue with detailed information about your problem</li> <li>Include error messages and the output of running ARI with the <code>-Debug</code> parameter </li> </ol>"}]}